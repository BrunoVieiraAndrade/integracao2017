[
    {
        "id": "disciplinas_de_formacao_basica",
        "titulo": "Disciplinas de Formação Básica",
        "subtopicos": [
            {
                "id": "computacao_e_sociedade",
                "tipo": "card_expansível",
                "titulo": "Computação e Sociedade",
                "url": "/disciplinas/computacao_e_sociedade",
                "resumo": "Computação e sociedade é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "computacao_e_sociedade",
                    "nome": "Computação e Sociedade",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 0,
                    "total": 32,
                    "periodo": "1°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [
                        "Profissionalismo",
                        "Habilidades comunicativas",
                        "Dinâmicas de grupo e psicologia",
                        "Fundamentos econômicos de engenharia de software"        
                    ],

                    "ementa": [
                        "História da computação.",
                        "Estudo e análise de casos de aplicação de computadores na sociedade e para o meio ambiente.",
                        "Subáreas da computação e áreas interdisciplinares.",
                        "Importância e desafios da computação no Brasil e no mundo.",
                        "Cursos de computação e aspectos profissionais: tipos de cursos, perfis profissionais, demanda do mercado, organizações e associações na área, regulamentação da profissão.",
                        "Leis e normas relacionadas à Informática.",
                        "Questões ambientais, raciais, de saúde e de inclusão digital relacionadas à Computação.",
                        "Ética na Computação.",
                        "Empresas de tecnologia da informação.",
                        "Incubadoras de empresas."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "FONSECA FILHO, C. História da computação: O Caminho do Pensamento e da Tecnologia. Porto Alegre: EDIPUCRS, 2007.",
                            "MASIERO, P. Ética em Computação. Editora da USP, 2000.",
                            "VELOSO, R. Tecnologias da Informação e Comunicação: Desafios e Perspectivas. São Paulo: Saraiva, 2011."
                        ],
                        "bibliografia_complementar": [
                            "CHALITA, G. Os Dez Mandamentos da Ética. Editora Nova Fronteira, 2003.",
                            "DRUMMOND, V. Internet, Privacidade e Dados Pessoais. Editora LumenJuris, 2003.",
                            "KACZMARCZYK, L. C. Computers and Society: Computing for Good. Chapman & Hall/CRC Textbooks in Computing. CRC Press, 2011.",
                            "LUCCA, N.; FILHO, A. S. Direito & Internet. Editora Edipro, 2001.",
                            "PAESANI, L. M. Direito de Informática. Editora Atlas, 2005."
                        ]
                    }
                }
            },
            {
                "id": "introducacao_a_programacao",
                "tipo": "card_expansível",
                "titulo": "Introdução à Programação",
                "url": "/disciplinas/introducacao_a_programacao",
                "resumo": "Introdução a programação é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "introducacao_a_programacao",
                    "nome": "Introdução à Programação",
                    "nucleo": "NC",
                    "teo": 48,
                    "pra": 80,
                    "total": 128,
                    "periodo": "1°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [
                        "Técnicas de resolução de problemas",
                        "Abstração",
                        "Fundamentos de programação",
                        "Princípios de linguagens de programação",
                        "Ferramentas e técnicas de debugging",
                        "Estrutura e representação de dados",
                        "Algoritmos e complexidade",
                        "Princípios de compiladores",
                        "Princípios de fatores de usuários humanos",
                        "Gramática",
                        "Tecnologias de construção",
                        "Ferramentas de construção de software"
                    ],
                    "ementa": [
                        "Introdução a algoritmos.",
                        "Conceitos básicos de programas: constantes; tipos de dados primitivos; variáveis; atribuição; entrada e saída de dados; expressões; estruturas de decisão; estruturas de repetição.",
                        "Ponteiro.",
                        "Estruturas de dados homogêneas e heterogêneas: vetores, matrizes, cadeias de caracteres, registros. Subprogramas: funções; passagens de parâmetros por valor e por referência, recursividade.",
                        "Manipulação de arquivos: abertura, fechamento, leitura e gravação.",
                        "Tipos de acesso a arquivos: sequencial e indexado.",
                        "Tipos de arquivos (texto e binário).",
                        "Transcrição de algoritmos para uma linguagem de programação.",
                        "Domínio de uma linguagem de programação: sintaxe e semãntica; interpretação e compilação de programas; ambiente de desenvolvimento de programas; estilo de codificação; documentação de código; técnicas de depuração e técnicas de profi/ing; desenvolvimento e uso de bibliotecas."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "FOBERLONE, A L. V.; EBERSPACHER, H. F. Lógica de Programação: A construção de algoritmos e estruturas de dados. 3.ª edição. São Paulo: Prentice Hall, 2005.",
                            "ASCENCIO, A F. G.; CAMPOS, E. A V. Fundamentos da Programação de Computadores. 3.ª edição. Editora Pearson, 2010.",
                            "SCHILDT, H. C Completo e Total. 3a Ed. São Paulo: Makron Books, 1996."
                        ],
                        "bibliografia_complementar": [
                            "FEOFILOFF, P. Algoritmos em Linguagem C. Editora Campus/Elsevier, 2009.",
                            "F ARRER, H. at al. Programação Estruturada de Computadores: Algoritmos Estruturados. 3.ª edição. Rio de Janeiro: LTC, 1989.",
                            "SEDGEWICK, R. Algorithms in C.3rd ed. Reading, Mss: AddisonWesley, 1998. ISBN0201314525.",
                            "SALVETTI, D. D.; BARBOSA, L. M. Algoritmos, São Paulo: Makron Books, 1998.",
                            "CORMEN, T. H et al., Algoritmos: Teoria e Prática. 2.ª edição. Rio de Janeiro: Editora Campus, 2002."
                        ]
                    }
                }
            },
            {
                "id": "calculo_1a",
                "tipo": "card_expansível",
                "titulo": "Cálculo 1A",
                "url": "/disciplinas/calculo_1a",
                "resumo": "Cálculo 1A é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "calculo_1a",
                    "nome": "Cálculo lA",
                    "nucleo": "NC",
                    "teo": 96,
                    "pra": 0,
                    "total": 96,
                    "periodo": "1°",
                    "unidade": "IME",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [
                        "Técnicas de prova",
                        "Princípios de contagem",
                        "Precisão numérica, acurácia, e erros",
                        "Teoria dos números",
                        "Estruturas algébricas",
                        "Conjuntos, relações e funções"
                    ],
                    "ementa": [
                        "Números reais. Funções reais de uma variável real e suas inversas.",
                        "Noções sobre cônicas.",
                        "Limite e continuidade.",
                        "Derivadas e aplicações.",
                        "Polinômio de Taylor.",
                        "Integrais. Técnicas de Integração. Integrais impróprias.",
                        "Aplicações."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "GUIDORIZZI, H. L. Um Curso de Cálculo, vol. 1. LTC, Rio de Janeiro, Brasil, 2006.",
                            "LEITHOLD, L. O Cálculo com Geometria Analítica, 3.ª edição. vol. 1. Harbra, São Paulo, 1994.",
                            "STEWART, J. Cálculo, 5.ª edição. vol. 1. Cengage Learning, São Paulo, 2006."
                        ],
                        "bibliografia_complementar": [
                            "ÁVILA, G. S. S. Cálculo: Funções de Uma Variável, 7.ª edição. vol. 1. LTC: Rio de Janeiro, 1994.",
                            "FLEMMING, D. M.; GONC,ALVES, M. B. Cálculo A: Funções, limite, derivação e integração. Makron Books do Brasil, São Paulo, 2006.",
                            "HOFFMANN, L. D.; BRADLEY, G. L. Cálculo: Um curso moderno com aplicações, 9.ª edição. LTC, Rio de Janeiro, 2008.",
                            "REIS, G. L; SILVA, V. V. Geometria Analítica. L TC, São Paulo.",
                            "SIMMONS, G. F. Cálculo com Geometria Analítica, vol.1. McGraw-Hill do Brasil, São Paulo, Brasil, 1987."
                        ]
                    }
                }
            },
            {
                "id": "fundamentos_de_matematica_para_computacao",
                "tipo": "card_expansível",
                "titulo": "Fundamentos de Matemática para Computação",
                "url": "/disciplinas/fundamentos_de_matematica_para_computacao",
                "resumo": "Fundamentos de matemática para computação é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "fundamentos_de_matematica_para_computacao",
                    "nome": "Fundamentos de Matemática para Computação",
                    "nucleo": "NC",
                    "teo": 64,
                    "pra": 0,
                    "total": 64,
                    "periodo": "1°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [
                        "Conjuntos, relações e funções",
                        "Lógica básica",
                        "Princípios de contagem",
                        "Técnicas de prova",
                        "Probabilidade discreta",
                        "Teoria dos números"
                    ],
                    "ementa": [
                        "Noções de lógica.",
                        "Introdução a demonstrações",
                        "Indução matemática, Recursividade e Relações de Recorrência, Conjuntos e Combinatória.",
                        "Séries e sequências.",
                        "Relações e Funções.",
                        "Representações numéricas e Mudança de base numérica."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "GERSTING, J. L. Fundamentos Matemáticos para a Ciência da Computação, 5.ª edição, Editora LTC, Rio de Janeiro, 2004.",
                            "SCHEINERMAN, E. R. Matemática Discreta: Uma introdução, Cengage Learning, Thompson Pioneira, 2003.",
                            "GRIMALDI, R. P. Discrete and Combinatorial Mathematics: AnApplied Introduction, 5th edition, Pearson - Addison-Wesley, Boston, 2003."
                        ],
                        "bibliografia_complementar": [
                            "GONÇALVES, A. Introdução à Álgebra, 5.a edição, CNPQ-IMPA, Rio de Janeiro, 2013.",
                            "MATTSON, Jr.; H. F. Discrete Mathematics with applications, John Wiley & Sons, New York, 1993.",
                            "ROSEN, K. H. Discrete Mathematics and Its Applications, 6.ª edição, Boston: McGraw-Hill, 2009.",
                            "ROSS, K. A.; Wright, C. R. B. Discrete mathematics, Prentice Hall, 1998.",
                            "SANTOS, J. P. O. Introdução à Teoria dos Números, Coleção Matemática Universitária, CNPQ-IMPA, Rio de Janeiro, 2003."
                        ]
                    }
                }
            },
            {
                "id": "arquitetura_de_computadores",
                "tipo": "card_expansível",
                "titulo": "Arquitetura de Computadores",
                "url": "/disciplinas/arquitetura_de_computadores",
                "resumo": "Arquitetura de computadores é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "arquitetura_de_computadores",
                    "nome": "Arquitetura de Computadores",
                    "nucleo": "NC",
                    "teo": 48,
                    "pra": 16,
                    "total": 64,
                    "periodo": "2°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [
                        "fundamentos_de_matematica_para_computacao"
                    ],
                    "topicos_swebok": [
                        "Conceitos básicos de um sistema",
                        "Organização dos computadores",
                        "Princípios de compiladores",
                        "Princípios de sistemas operacionais",
                        "Princípios de comunicação em redes",
                        "Lógica básica",
                        "Probabilidade discreta",
                        "Máquinas de estado finito"
                    ],
                    "ementa": [
                        "Visão geral dos computadores modernos.",
                        "Evolução da arquitetura dos computadores.",
                        "Memória e representação de dados e instruções.",
                        "Processador, ciclo de instrução, formato e endereçamento.",
                        "Noções básicas de programação em linguagem de montagem.",
                        "Dispositivos de entrada e saída.",
                        "Sistemas de interconexão (barramentos).",
                        "Interfaceamento e técnicas de entrada e saída.",
                        "Hierarquia de memória.",
                        "Introdução a arquiteturas paralelas e métricas de desempenho."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "BRYANT, R.; O'RALLARON, D. Computer Systems: A Programmer's Perspective, 2nd Edition, Addison Wesley, 2010.",
                            "STALLINGS, W. Arquitetura e Organização de Computadores, 5a. Edição, Prentice-Hall, 2002.",
                            "TANENBAUM, A. Organização Estruturada de Computadores, Editora LTC, 2006."
                        ],
                        "bibliografia_complementar": [
                            "HENNESSY, J. L.; PATTERSON, D. A. Computer Architecture: A Quantitative Approach, 4th Edition, Morgan Kaufmann, 2007.",
                            "MONTEIRO, M. A. Introdução à Organização de Computadores. 4ª. Edição. Editora LTC, Rio de Janeiro, 2001. ISBN: 8521612915.",
                            "PATTERSON, D. A.; HENNESSY, J. L. Computer Organization and Design: The Hardware/Software Interface, 3rd edition, Morgan Kaufmann, 2007.",
                            "STALLINGS, W. Computer Organization and Architecture: Designing for Performance. 10th Edition. Prentice-Hall, Inc., Upper Saddle River, NJ, USA. 2010.",
                            "WEBER, R. F. Fundamentos de Arquiteturas de Computadores, 2.ª Edição, Editora Sagra-Luzzatto, 2001."
                        ]
                    }
                }
            },
            {
                "id": "algoritmos_e_estrutura_de_dados_1",
                "tipo": "card_expansível",
                "titulo": "Algoritmos e Estruturas de Dados 1",
                "url": "/disciplinas/algoritmos_e_estrutura_de_dados_1",
                "resumo": "Algoritmos e estrutura de dados 1 é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "introducacao_a_programacao",
                    "nome": "Algoritmos e Estruturas de Dados 1",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "2°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [
                        "introducacao_a_programacao"
                    ],
                    "topicos_swebok": [
                        "Estruturas algébricas",
                        "Gráfos e árvores",
                        "Algoritmos e complexidade",
                        "Estrutura de dados e representação",
                        "Fundamentos de programação",
                        "Abstração",
                        "Técnicas de resolução de problemas",
                        "Ferramentas e técnicas de debugging"
                    ],
                    "ementa": [
                        "Noções de complexidade de algoritmos (notações de complexidade).",
                        "Algoritmos de pesquisa: pesquisa sequencial e binária.",
                        "Algoritmos de ordenação.",
                        "Tipos abstratos de dados.",
                        "Estruturas de dados utilizando vetores: pilhas, filas, listas (simples e circulares).",
                        "Estruturas de dados com alocação dinâmica de memória: pilhas, filas, listas (simplesmente encadeadas, duplamente encadeadas e circulares)."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "FEOFILOFF, P. Algoritmos em Linguagem C. Editora Campus/Elsevier, 2009.",
                            "SZWARCFITER, J. L.; MARKENZON, L. Estruturas de Dados e seus Algoritmos. 2ª edição, L TC, 1994.",
                            "TENENBAUM, A. M.; LANGSAM, Y.; AUGENSTEIN, M. Estruturas de Dados Usando C, São Paulo, Makron Books, 1995."
                        ],
                        "bibliografia_complementar": [
                            "CORMEN, T. H. et al., Algoritmos: Teoria e Prática. 2.' edição, Rio de Janeiro: Editora Campus, 2002.",
                            "SALVETTI, D. D.; BARBOSA, L. M.; Algoritmos, Makron Books, São Paulo, 1998.",
                            "SEDGEWICK, R. Algorithms in C++ (Parts 1-4), Addison-Wesley, 3rd Edition, 1998.",
                            "ZIVIANI, N. Projeto de Algoritmos com implementação em Pascal e C. São Paulo: Editora Thomson, 3.' edição, 2010.",
                            "ZIVIANI, N. Projeto de Algoritmos com implementação em Java e C++. São Paulo: Editora Thomson, 2006."
                        ]
                    }
                }
            },
            {
                "id": "probabilidade_e_estatistica_a",
                "tipo": "card_expansível",
                "titulo": "Probabilidade e Estatística A",
                "url": "/disciplinas/probabilidade_e_estatistica_a",
                "resumo": "Probabilidade e estatística A é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "probabilidade_e_estatistica_a",
                    "nome": "Probabilidade e Estatística A",
                    "nucleo": "NC",
                    "teo": 64,
                    "pra": 0,
                    "total": 64,
                    "periodo": "2°",
                    "unidade": "IME",
                    "obrigatoria": "Sim",
                    "prerequisito": [
                        "calculo_1a"
                    ],
                    "topicos_swebok": [
                        "Conjuntos, relações e funções",
                        "Probabilidade discreta",
                        "Princípios de contagem",
                        "Teoria dos números",
                        "Técnicas de prova",
                        "Lógica básica",
                        "Análise estatística",
                        "Métodos empíricos e técnicas de experimentação",
                        "Medição"
                    ],
                    "ementa": [
                        "Estatística descritiva. Noções sobre amostragem.",
                        "Introdução à teoria de conjuntos.",
                        "Introdução à teoria de probabilidade: espaço amostral, eventos, frequência relativa, fundamentos de probabilidade, probabilidade condicional, eventos independentes e teorema de Bayes",
                        "Variáveis aleatórias: conceitos básicos, esperança e variância.",
                        "Distribuições discretas de probabilidade: uniforme, binomial e Poisson.",
                        "Distribuições contínuas de probabilidade: uniforme, exponencial, normal e t-Student.",
                        "Estimação pontual e intervalar para uma população: média e proporção.",
                        "Teste de hipóteses para uma população: média e proporção.",
                        "Correlação linear e regressão linear simples."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "MAGALHÃES, M. N. Noções de Probabilidade e Estatística. São Paulo: EDUSP, 7.ª ed., 2010.",
                            "MEYER, P. L. Probabilidade: Aplicações à Estatística. Rio de Janeiro: LTC, 1969.",
                            "W ALPOLE, R. E.; MYERS, R. H.; MYERS, S. L.; YE, K. Probabilidade e Estatística para Engenharia e Ciências. São Paulo: Pearson, 8.ª ed., 2009."
                        ],
                        "bibliografia_complementar": [
                            "BUSSAB, W. O.; MORETTIN, P. A. Estatística Básica. 6.ª ed. São Paulo: Saraiva, 2010.",
                            "DANTAS, C. A. B. Probabilidade: um Curso Introdutório. 3.ª ed. São Paulo: EDUSP, 2008.",
                            "MORETTIN, L. G. Estatística básica: probabilidade e inferência. São Paulo: Prentice Hall, 2010.",
                            "ROSS, S. Probabilidade. Um Curso Moderno com Aplicações. 8.ª ed. Porto Alegre: Bookman, 2010.",
                            "TRIOLA, M. F. Introdução à Estatística. 10. ed. Rio de Janeiro: LTC, 2008."
                        ]
                    }
                }
            },
            {
                "id": "algebra_linear",
                "tipo": "card_expansível",
                "titulo": "Álgebra Linear",
                "url": "/disciplinas/algebra_linear",
                "resumo": "Algebra linear é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "algebra_linear",
                    "nome": "Álgebra Linear",
                    "nucleo": "NC",
                    "teo": 64,
                    "pra": 0,
                    "total": 64,
                    "periodo": "2°",
                    "unidade": "IME",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [
                        "Teoria dos números",
                        "Conjuntos, relações e funções",
                        "Princípios de contagem",
                        "Técnicas de prova",
                        "Precisão numérica, acurácia e erros",
                        "Estruturas algébricas"
                    ],
                    "ementa": [
                        "Sistemas lineares e matrizes.",
                        "Espaços vetoriais.",
                        "Transformações lineares.",
                        "Autovalores e autovetores.",
                        "Espaços com produto interno"
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "BOLDRINI,J. L.; COSTA, S. I. R; FIGUEIREDO, V. L; WETZLER, H. G. Álgebra Linear, 3.ª ed. Harbra, São Paulo, 2003.",
                            "CALLIOLI, C. A.; DOMINGUES, H. H; COSTA, R. C. F. Álgebra Linear e Aplicações. Atual, Brasil, 1983.",
                            "LIPSCHUTZ, S. Álgebra Linear, 2.ª ed. Makrom-Books, São Paulo, Brasil, 1974."
                        ],
                        "bibliografia_complementar": [
                            "APOSTOL, T. Linear Algebra: A First Course with Applications to Differential Equations, isr ed. Wiley-Interscience, 1997.",
                            "HOFFMAN, K.; KUNZE, R. Álgebra Linear. Polígono, São Paulo, 1971.",
                            "HOWARD, A.; RORRES, C. Álgebra Linear com Aplicações, 8.ª ed. Bookman, Porto Alegre, Brasil, 2001.",
                            "LIMA, E. L. Álgebra Linear: Coleção Matemática Universitária. IMPA, Rio de Janeiro, Brasil, 2006.",
                            "SHOKRANIAN, S. Introdução à Álgebra Linear e Aplicações, 1 ed. UNB, 2004."
                        ]
                    }
                }
            },
            {
                "id": "logica_matematica",
                "tipo": "card_expansível",
                "titulo": "Lógica Matemática",
                "url": "/disciplinas/logica_matematica",
                "resumo": "Lógica matemática é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "logica_matematica",
                    "nome": "Lógica Matemática",
                    "nucleo": "NC",
                    "teo": 64,
                    "pra": 0,
                    "total": 64,
                    "periodo": "2°",
                    "unidade": "IME",
                    "obrigatoria": "Sim",
                    "prerequisito": [
                        "fundamentos_de_matematica_para_computacao"
                    ],
                    "topicos_swebok": [
                        "Técnicas de prova",
                        "Probabilidade discreta",
                        "Lógica básica",
                        "Teoria dos números",
                        "Conjuntos, relações e funções",
                        "Princípios de linguagens de programação",
                        "Técnicas de resolução de problemas",
                        "Métodos empíricos e técnicas de experimentação"
                    ],
                    "ementa": [
                        "Noções básicas: linguagem natural vs linguagens formais; verdade, validade, satisfatibilidade; lógica proposicional (sintaxe e semântica, propriedades e relações semânticas, consequência lógica, simplificação de fórmulas); lógica de primeira ordem (sintaxe e semântica, propriedades e relações semânticas, formas normais);",
                        "Métodos de validação: métodos diretos de prova; métodos de prova por contradição; indução estrutural",
                        "Linguagem para experimentação.",
                        "Aplicações básicas."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "SOUZA, J. N. Lógica para Ciência da Computação. Editora Campus, 3.ª Edição, 2015.",
                            "SILVA, F. C.; FINGER, M.; MELO, A. C. V. Lógica para Computação. Thomson Learning, 2006.",
                            "HUTH, M.; RYAN, M. Lógica em Ciência da Computação: modelagem e argumentação sobre sistemas. 2.ª edição. Editora L TC, 2008."
                        ],
                        "bibliografia_complementar": [
                            "MORTARI, C. Introdução à Lógica. São Paulo: UNESP. 2001.",
                            "MENDELSON, E. Introduction to Mathematical Logic, Academic Press, 2000.",
                            "ENDERTON, H. A. Mathematical Introduction to Logic. Academic Press 2000.",
                            "SMULLYAN, R. Lógica de Primeira Ordem. São Paulo: UNESP. 2009.",
                            "CASANOVA, M. A.; GIORNO, F. A. C.; FURTADO, A. L. Programação em Lógica e a Linguagem PROLOG. Edgard Blucher, 1987."
                        ]
                    }
                }
            },
            {
                "id": "programacao_orientada_a_objetos",
                "tipo": "card_expansível",
                "titulo": "Programação Orientada a Objetos",
                "url": "/disciplinas/programacao_orientada_a_objetos",
                "resumo": "Programação orientada a objetos é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "programacao_orientada_a_objetos",
                    "nome": "Programação Orientada a Objetos",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "3°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [
                        "introducacao_a_programacao"
                    ],
                    "topicos_swebok": [],
                    "ementa": [
                        "Abstração e tipos abstratos de dados.",
                        "Classes, métodos, encapsulamento, interface. Mensagens, instâncias e inicialização. Herança e composição. Polimorfismo.",
                        "Uso de uma linguagem orientada a objetos.",
                        "Noções de UML.",
                        "Noções de padrões de projeto orientado a objetos."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "BORATTI, I. C. Programação orientada a objetos em Java. i.a Edição. Visual Books, 2007.",
                            "ECKEL, B. Thinking inJava. Prentice Hall, 3.ª Edição, 2002.",
                            "DEITEL, P. J.; DEITEL, H. M. Java: como programar 6.ª ed. São Paulo: Prentice Hall, 2005. 1386 p."
                        ],
                        "bibliografia_complementar": [
                            "BUDD, T. An Introduction to Object-Oriented Programming. Addison Wesley, 1996.",
                            "GAMMA, E. et al. Design patterns: elements of reusable object-oriented software. Reading: Addison Wesley, 1995.",
                            "HORSTMANN, C. S. Core Java - Volume II - Advanced Features, Prentice Hall, 8.ª Edição, 2008.",
                            "SANTOS, R. Introdução à Programação Orientada a Objetos com Java. Campus, 2003.",
                            "ZEIGLER, B. P. Objects and Systerns: Principled Design with Implementations in C++ andJava. Springer-Verlag NewYork, Inc., New York, NY, USA. 1997."
                        ]
                    }
                }
            },
            {
                "id": "algoritmos_e_estruturas_de_dados_2",
                "tipo": "card_expansível",
                "titulo": "Algoritmos e Estruturas de Dados 2",
                "url": "/disciplinas/algoritmos_e_estruturas_de_dados_2",
                "resumo": "Algoritmos e estrutura de dados 2 é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "algoritmos_e_estruturas_de_dados_2",
                    "nome": "Algoritmos e Estruturas de Dados 2",
                    "nucleo": "NC",
                    "teo": 64,
                    "pra": 0,
                    "total": 64,
                    "periodo": "3°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [
                        "introducacao_a_programacao"
                    ],
                    "topicos_swebok": [],
                    "ementa": [
                        "Árvores: formas de representação, recursão em árvores, árvores binárias, árvores binárias de busca, árvores balanceadas (AVL e rubro-negras).",
                        "Filas de prioridades. Heaps, Heapsort. Hashing: tipos de funções de hashing; tratamento de colisões.",
                        "Definições de Grafos.",
                        "Estruturas de Dados para representação de grafos.",
                        "Algoritmos básicos em grafos."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "FEOFILOFF, P. Algoritmos em Linguagem C. Editora Campus/Elsevier, 2009.",
                            "SZW ARCFITER, J. L.; Markenzon, L. Estruturas de Dados e seus Algoritmos. 2ª edição, L TC, 1994.",
                            "TENENBAUM, A. M.; LANGSAM, Y.; AUGENSTEIN, M. Estruturas de Dados Usando C, São Paulo, Makron Books, 1995."
                        ],
                        "bibliografia_complementar": [
                            "CORMEN, T. H. et al., Algoritmos: Teoria e Prática. 2ª edição, Rio de Janeiro: Editora Campus, 2002.",
                            "SALVETTI, D. D. e BARBOSA, L. M., Algoritmos, Makron Books, São Paulo, 1998.",
                            "SEDGEWICK, R. Algorithms in C++ (Parts 1-4), 3rd edition, AddisonWesley, 1998.",
                            "ZIVIANI, N. Projeto de Algoritmos com implementação em Pascal e C. 3ª edição, São Paulo: Editora Thomson, 2010.",
                            "ZIVIANI, N. Projeto de Algoritmos com implementação em Java e C++. São Paulo: Editora Thomson, 2006."
                        ]
                    }
                }
            },
            {
                "id": "linguagens_e_paradigmas_de_programacao",
                "tipo": "card_expansível",
                "titulo": "Linguagens e Paradigmas de Programação",
                "url": "/disciplinas/linguagens_e_paradigmas_de_programacao",
                "resumo": "Linguagens e paradigmas de programação é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "linguagens_e_paradigmas_de_programacao",
                    "nome": "Linguagens e Paradigmas de Programação",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "3°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [
                        "introducacao_a_programacao"
                    ],
                    "topicos_swebok": [],
                    "ementa": [
                        "Estudo dos conceitos de linguagens de programação e dos paradigmas de programação: procedural, funcional, lógico, orientado a objeto e script.",
                        "Reflexão sobre as características desejáveis em uma linguagem de programação e os critérios de seleção de linguagens de acordo com as especificidades dos domínios de aplicação.",
                        "Descrição de sintaxe e semântica.",
                        "Estudo sobre tipos de dados, estruturas de controle, ambientes de execução, variáveis, expressões e subprogramas em linguagens de programação."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "GHEZZI, C.; JAZYERI, M. Programming Language Concepts, 3rd Edition, Wiley; 3rd Edition; 1997.",
                            "SCOTT, M. L. S. Programming Language Pragmatics, 3rd Edition, Morgan Kaufmann, 2009.",
                            "SEBEST A, R. W. Concepts of Programming Languages; 10th Edition, Pearson, 2012."
                        ],
                        "bibliografia_complementar": [
                            "FRIEDMAN, D. P.; WAND, M. Essentials of Programming Languages, 3rd Edition, The MIT Press, 2008.",
                            "PRATT, T. W.; ZELKOWITZ, M. V. Programming Languages: Design and Implementation, 4th Edition, Prentice Hall, 2000.",
                            "ROY, P. V.; HARIFI, S. Concepts, Techniques, and Models of Computer Programming, 1 st Edition, The MIT Press, 2004.",
                            "TURBAK, F.; GIFFORD, D. Design Concepts in Programming Languages, 1 st Edition, The MIT Press, 2008.",
                            "VAREJÃO, F. Linguagens de Programação, r.a Edição, Editora. Campus, 2004."
                        ]
                    }
                }
            },
            {
                "id": "engenharia_de_software",
                "tipo": "card_expansível",
                "titulo": "Engenharia de Software",
                "url": "/disciplinas/engenharia_de_software",
                "resumo": "Engenharia de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "engenharia_de_software",
                    "nome": "Engenharia de Software",
                    "nucleo": "NC",
                    "teo": 64,
                    "pra": 0,
                    "total": 64,
                    "periodo": "3°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Requisitos de software.",
                        "Projeto (design) de software.",
                        "Construção de software.",
                        "Teste de software.",
                        "Manutenção de software",
                        "Gerência de configuração de software.",
                        "Gerência de projeto de software.",
                        "Processo de engenharia de software.",
                        "Modelos e métodos de engenharia de software.",
                        "Qualidade de software.",
                        "Prática profissional de engenharia de software.",
                        "Economia para engenharia de software.",
                        "Fundamentos de engenharia."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "PRESSMAN, R.; MAX.IM, B. Software Engineering: A Practitioner's Approach, 8th edition, McGraw-Hill, 2014.",
                            "SOMMERVILLE, I. Software Engineering, 10th Edition, Pearson, 2016.",
                            "WAZLA WICK, R. S. Engenharia de software: teoria e prática. Campus, 2013."
                        ],
                        "bibliografia_complementar": [
                            "ISO/IEC/IEEE 24765. Systems and software engineering - Vocabulary, 2010. Portal de periódicos da CAPES (http:/ /goo.gl/FrGm7c).",
                            "MAGELA, R. Engenharia de software aplicada. Alta Books, 2006.",
                            "MPS.BR. Melhoria de Processos do Software Brasileiro. Disponível em http:/ /www.softex.br/mpsbr/, último acesso julho/2016.",
                            "Software Engineering Body of Knowledge (SWEBOK), V3, IEEE, Disponível em https://www.computer.org/web/swebok.",
                            "Software Engineering Competency Model (SWECOM), IEEE.",
                            "Disponível em https://www.computer.org/web/peb/swecom."
                        ]
                    }
                }
            },
            {
                "id": "analise_e_projeto_de_algoritmos",
                "tipo": "card_expansível",
                "titulo": "Análise e Projeto de Algoritmos",
                "url": "/disciplinas/analise_e_projeto_de_algoritmos",
                "resumo": "Análise e projeto de algoritmos é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "analise_e_projeto_de_algoritmos",
                    "nome": "Análise e Projeto de Algoritmos",
                    "nucleo": "NC",
                    "teo": 64,
                    "pra": 0,
                    "total": 64,
                    "periodo": "4°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [
                        "fundamentos_de_matematica_para_computacao",
                        "algoritmos_e_estruturas_de_dados_2"
                    ],
                    "topicos_swebok": [],
                    "ementa": [
                        "Medidas de complexidade, análise assintótica de limites de complexidade para algoritmos iterativos e recursivos, técnicas de prova de cotas inferiores.",
                        "Corretude de Algoritmos.",
                        "Exemplos de análise de algoritmos.",
                        "Técnicas de projeto de algoritmos: dividir para conquistar, programação dinâmica, algoritmos gulosos.",
                        "Introdução à NP-Completude."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "BRASSARD, G.; BRATLEY, P. Fundamentais of Algorithmics. PrenticeHall, Inc., Upper Saddle River, NJ, 1996. ISBN: 0-13-335068-1.",
                            "CORMEN, T. H.; LEISERSON, C. E.; RIVEST, R. L.; STEIN, C. Algoritmos: Teoria e Prática, 3.ª edição, Campus, 2012.",
                            "PAPADIMITRIOU, C. H.; VAZIRANI, U. V.; DASGUPTA, S. Algoritmos. 2009. McGraw-Hill Brasil. ISBN 9788577260324."
                        ],
                        "bibliografia_complementar": [
                            "AHO, A. V.; HOPCROFT,J. E.; ULLMAN,J. D. The Design andAnalysis of Computer Algorithms, Addison-Wesley Publishing Company, 1974. ISBN 0-201-00029-6.",
                            "BAASE, S.; GELDER, A. V. Computer Algorithms: Introduction to Design and Analysis, 3rd Edition, Pearson, 1999.",
                            "MAMBER, U. Introduction to Algorithms. Addison Wesley Publishing Company. 1989.",
                            "SEDGEWICK, R.; WAYNE, K. Algorithms. 4th edition, Addison-Wesley Professional, 2011. ISBN: 978-0321573513.",
                            "SZWARCFITER, J. L.; MARKENZON, L. Estrutura de Dados e seus Algoritmos. 3.ª edição, LTC Editora, 2010. ISBN 978852161750."
                        ]
                    }
                }
            },
            {
                "id": "interacao_humano_computador",
                "tipo": "card_expansível",
                "titulo": "Interação Humano-Computador",
                "url": "/disciplinas/interacao_humano_computador",
                "resumo": "Integração humano computador é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "interacao_humano_computador",
                    "nome": "Interação Humano-Computador",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "4°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [
                        "introducacao_a_programacao",
                        "probabilidade_e_estatistica_a"
                    ],
                    "topicos_swebok": [],
                    "ementa": [
                        "Aspectos gerais sobre interação humano-computador.",
                        "Características humanísticas e biológicas, envolvendo questões sobre genealogia, gênero, aspectos étnicos, raciais e culturais, direitos e aspectos políticos, deficiências, limitações e capacidades, dentre outros.",
                        "Ciclo da interação e principais problemas. Metas de usabilidade e experiência do usuário.",
                        "Fatores humanos em software interativo: teoria, princípios e regras básicas. Modelos conceituais e metáforas.",
                        "Estilos de interação. Elementos de interação (menus, formulários, manipulação direta e outros). Voz, linguagem natural, sons, páginas Web. Padrões para interface.",
                        "Localização e internacionalização.",
                        "Princípios de projeto de interfaces humano-computador. Métodos de projeto de interação. Projeto visual (cores, ícones, fontes e outros). Tempo de resposta e retroalimentação.",
                        "Dispositivos de interação.",
                        "Métodos de avaliação de interfaces: avaliação heurística, abordagens para testes realizados com apoio de usuários, técnicas de testes para páginas Web, entre outros.",
                        "Visão geral de ferramentas de desenvolvimento de interfaces humano-computador."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "DIX, A.; FINLAY, J. E.; ABOWD, G. D.; BEALE, R. Human-Computer Interaction (W<l Edition). Prentice-Hall, Inc., Upper Saddle River, NJ, USA, 2003.",
                            "ROGERS, Y.; SHARP, H.; PREECE, J. Design de Interação - Além da Interação Homem-computador. 3a Ed., Porto Alegre: Bookman, 2013.",
                            "TIDWELL, J. Designing Interfaces: Patterns for Effective Interaction Design. O'Reilly. Segunda edição, 2011."
                        ],
                        "bibliografia_complementar": [
                            "BARBOSA, S. D. J.; SILVA, B. S. Interação Humano-Computador. Elsevier Editora. ta edição. 2010.",
                            "JACKO, Julie A. The human-computer interaction handbook: fundamentals, evolving technologies, and emerging applications. CRC Press, 2012.",
                            "LAZAR, J.; FENG, J. H.; HOCHHEISER, H. Research Methods m Human-Computer Interaction. Wiley, 2009.",
                            "MACKENZIE, I. S. Human-computer Interaction: An Empirical Research Perspective. Morgan Kaufmann, 201 3. ISBN: 978-0-1 2-405865-1.",
                            "SCOTT, B.; NEIL, T. Designing Web Interfaces: Principles and Patterns for Rich Interactions. O'Reilly Media; 1st edition. 2009."
                        ]
                    }
                }
            },
            {
                "id": "banco_de_dados",
                "tipo": "card_expansível",
                "titulo": "Banco de Dados",
                "url": "/disciplinas/banco_de_dados",
                "resumo": "Banco de dados é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "banco_de_dados",
                    "nome": "Banco de Dados",
                    "nucleo": "NC",
                    "teo": 48,
                    "pra": 16,
                    "total": 64,
                    "periodo": "4°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [
                        "logica_matematica"
                    ],
                    "topicos_swebok": [],
                    "ementa": [
                        "Conceitos básicos de Banco de Dados.",
                        "Modelo relacional.",
                        "Linguagens para Banco de Dados: álgebra relacional, cálculo relacional e SQL.",
                        "Modelo Entidade-Relacionamento e extensões.",
                        "Mapeamento ER-relacional.",
                        "Normalização."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "ELMASRI, R.; NAVATHE, S. B. Sistemas de Banco de Dados, 6: ed., Pearson - Addison Wesley, 2011.",
                            "HEUSER, C. A. Projeto de Banco de Dados, 6.ª edição, Bookman, Porto Alegre, 2009.",
                            "SILBERSCHATZ, A.; KORTH, H. F.; SUDARSHAN, S. Sistema de Banco de Dados, 5.ª edição, Editora Campus, Rio de Janeiro, 2006."
                        ],
                        "bibliografia_complementar": [
                            "CONNOLLY, T. M.; BEGG, C. E.; STRACHAN, A. D. Database systems: a practical approach to design, implementation and management, 3rd. Edition, Addison Wesley, 2010.",
                            "DATE, C. J. Introdução a Sistemas de Banco de Dados, tradução da 8.ª edição americana, Editora Campus, Rio de Janeiro, 2004.",
                            "GARCIA-MOLINA, H.; ULLMAN, J. D.; WIDOM, J. D. Database Systems: The Complete Book, 2.ª edição, Prentice Hall, 2009.",
                            "RAMAKRISHNAN, R.; GEHRKE, J. Sistemas de Gerenciamento de Banco de Dados, tradução da 3.ª edição, São Paulo, McGraw-Hill, 2008.",
                            "TEOREY, T.; LIGHTSTONE, S.; NADEAU, T. Projeto e Modelagem de Bancos de Dados, Editora Campus, Rio de Janeiro, 2007."
                        ]
                    }
                }
            },
            {
                "id": "projeto_de_software",
                "tipo": "card_expansível",
                "titulo": "Projeto de Software",
                "url": "/disciplinas/projeto_de_software",
                "resumo": "Projeto de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "projeto_de_software",
                    "nome": "Projeto de Software",
                    "nucleo": "NC",
                    "teo": 64,
                    "pra": 0,
                    "total": 64,
                    "periodo": "4°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [
                        "programacao_orientada_a_objetos",
                        "engenharia_de_software"
                    ],
                    "topicos_swebok": [],
                    "ementa": [
                        "Fundamentos de design de software.",
                        "Questões básicas de design de software: concorrência, controle e tratamento de eventos, persistência de dados, distribuição, tratamento de erro e exceção, tolerância a falhas, interação e apresentação, e segurança. Estrutura e arquitetura de software.",
                        "Projeto de interface de usuário.",
                        "Análise de qualidade e avaliação de design de software.",
                        "Notação de design de software.",
                        "Métodos e estratégias de design de software.",
                        "Ferramentas de design de software."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "BUDGEN, B. Software Design, 2nd edition, Addison-Wesley, 2003.",
                            "BASS, L. et al. Software Architecture in Practice, 3rd edition, Addison-Wesley, 2012.",
                            "LARMAN, C. Utilizando UML e padrões: uma introdução à análise e ao projeto orientados a objetos e ao desenvolvimento interativo. Bookman, 2008."
                        ],
                        "bibliografia_complementar": [
                            "BOOCH, G. UML guia do usuário: o mais avançado tutorial sobre Unified Modeling Language (UML). Elsevier, 2006.",
                            "FREEMAN, E. et al. Use a cabeça!: padrões de projetos, (design patterns), Alta Books, 2007.",
                            "FOWLER, M. Patterns of enterprise application architecture. Addison-Wesley, 2003.",
                            "GAMMA, E. et al. Design patterns elements of reusable object-oriented software. Reading: Addison Wesley, 1995.",
                            "NYGARD, M. Release It!: Design and Deploy Production-Ready Software, Pragmatic Bookshelf, 2007."
                        ]
                    }
                }
            }
        ]
    },
    {
        "id": "disciplinas_de_engenharia_de_software",
        "titulo": "Disciplinas de Engenharia de Software",
        "url": "/disciplinas/disciplinas_de_engenharia_de_software",
        "subtopicos": [
            {
                "id": "construcao_de_software",
                "tipo": "card_expansível",
                "titulo": "Construção de Software",
                "url": "/disciplinas/construcao_de_software",
                "resumo": "Construção de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "construcao_de_software",
                    "nome": "Construção de Software",
                    "nucleo": "NC",
                    "teo": 48,
                    "pra": 80,
                    "total": 128,
                    "periodo": "5°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [
                        "Fundamentos de construção de software",
                        "Minimizando a complexidade",
                        "Antecipando mudanças",
                        "Construção para verificação",
                        "Reuso",
                        "Padrões em construção",
                        "Gerenciamento de construção",
                        "Construção em modelos de ciclo de vida",
                        "Planejamento de construção",
                        "Medidas de construção",
                        "Considerações práticas",
                        "Design de construção",
                        "Linguagens de construção",
                        "Codificação",
                        "Teste de construção",
                        "Construção para reuso",
                        "Construção com reuso",
                        "Qualidade de construção",
                        "Integração",
                        "Tecnologias de construção",
                        "API design e uso",
                        "Considerações sobre tempo de execução orientado a objetos",
                        "Parametrização e genericos",
                        "Asserções, design por contrato, programação defensiva",
                        "Manuseamento de erros, manuseamento de exceções, tolerância a falhas",
                        "Modelos executáveis",
                        "Técnicas de construção baseada em estado e dirigida à mesa",
                        "Configuração e internacionalização em tempo de execução",
                        "Processamento de entrada baseado em gramática",
                        "Princípios de concorrência",
                        "Middleware",
                        "Métodos de construção para software distribuído",
                        "Construindo sistemas heterogêneos",
                        "Análise de perfomance e balanceamento",
                        "Padrões de plataforma",
                        "Programação teste primeiro",
                        "Ferramentas de construção de software",
                        "Ambientes de desenvolvimento",
                        "Construtores de GUI",
                        "Ferramentas de teste unitário",
                        "Recortes, análise de performance, e ferramentas de recorte",
                        "Matriz de tópicos ou material de referência"
                    ],
                    "ementa": [
                        "Visão geral (4h): construção (minimizar complexidade, antecipação de mudança, verificação, padrões), projeto de software (sofware design), qualidade de produto.",
                        "Planejamento (8h): linguagens de programação e processos de construção.",
                        "Gerência de construção (16h): controle de versão, inspeção e revisão de código.",
                        "Fundamentos de codificação (32h): estratégias recomendadas para criar código, variáveis, classes, interfaces, polimorfismo, rotinas, recursão, condições, laços, tratamento de exceção, reflexão, programação defensiva, padrão de codificação (leiaute e estilo), documentação, ferramentas de programação.",
                        "Projeto (design) detalhado e codificação (32h): noções de projeto detalhado, especificação de projeto, análise sintática (parsing), expressões regulares, parametrização (generics), closure, logging, configuração de software em tempo de execução. Internacionalização. Técnicas de construção baseadas em estado e tabelas.",
                        "Refatoração (8h).",
                        "Testes de unidade (16h).",
                        "Detecção e remoção de defeitos (debugging) (8h).",
                        "Integração (4h): integração contínua."
                    ],
                    "condicoesMinimas": [
                        "(Segue instruções). Explicar a construção de software, a relação dessa área de conhecimento com as demais da engenharia de software e a relação com o conceito de sistema.",
                        "(Faz com orientação). Usar e configurar ferramentas para edição, documentação, compilação, depuração (debugging), build, teste, controle de versão, coleta de medidas (desempenho, consumo de memória, análise estática e cobertura), integração contínua, e aplicativos fundamentais de linha de comandos.",
                        "(Faz com orientação). Criar código orientado a objetos em conformidade com o projeto (design) detalhado seguindo estratégias recomendadas.",
                        "(Segue instruções). Usar processos para a construção de software (criação de código, controle de versão, inspeção e integração).",
                        "(Segue instruções). Detalhar projeto (design) em conformidade com requisitos de software.",
                        "(Segue instruções). Depurar (debugging) código.",
                        "(Segue instruções). Criar testes de unidade básicos empregando estratégias recomendadas.",
                        "(Segue instruções). Localizar e reutilizar código (bibliotecas e frameworks).",
                        "(Segue instruções). Colaborar com a construção de código em equipe.",
                        "(Segue instruções). Avaliar a qualidade interna de código e, quando apropriado, aplicar estratégias recomendadas de refatoração."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "MCCONNELL, S. Code Complete: um guia prático para a construção de software 2.ª edição. Porto Alegre, RS: Bookman, 2005. ISBN 8536305045.",
                            "GOODLIFFE, P. Como ser um programador melhor. Novatec, 2015. ISBN 978-85-7522-415-l.",
                            "ORAM, A.; WILSON, G. Beautiful code. O'Reilly, 2007. ISBN 9780596510046."
                        ],
                        "bibliografia_complementar": [
                            "FOWLER, M. Refatoração: aperfeiçoando o projeto de código existente Porto Alegre: Bookman, 2004, ISBN 8536303956.",
                            "IRVINE, K. R. C++ and object-oriented programming Upper Saddle River: Prentice-Hall, 1997. 526 p. Bibliografia e indice ISBN 0023598522 (broch.)",
                            "BECK, K. Implementation patterns Upper Saddle River, NJ: AddisonWesley, 2008. ISBN 0321413091.",
                            "MARTIN, R. C. Clean code: a handbook of agile software craftsmanship. Prentice Hall, 2009. ISBN 0132350882.",
                            "AGANS, D. J. Debugging the nine indispensable rules for finding even the most elusive software and hardware problems. AMACOM, 2002. ISBN 0814471684."
                        ]
                    }
                }
            },
            {
                "id": "modelagem_de_software",
                "tipo": "card_expansível",
                "titulo": "Modelagem de Software",
                "url": "/disciplinas/modelagem_de_software",
                "resumo": "Modelagem de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "modelagem_de_software",
                    "nome": "Modelagem de Software",
                    "nucleo": "NC",
                    "teo": 16,
                    "pra": 48,
                    "total": 64,
                    "periodo": "5°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Conceitos (4h): software, qualidade de software, requisitos de software, projeto de software.",
                        "Processo de projeto de software (4h).",
                        "Notações para registro de modelos orientados a objetos (16h).",
                        "Modelagem de software orientado a objetos (40h)."
                    ],
                    "condicoesMinimas": [
                        "(Faz com orientação). Explicar o que é software, qualidade de software, requisitos de software e a relação entre eles.",
                        "(Faz sem orientação). Empregar notações para registro de projeto de software orientado a objetos.",
                        "(Segue instruções). Criar modelos de projeto de software orientado a objetos."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "EVANS, E. Domain-driven design: tackling complexity in the heart of software Boston, MA: Addison-Wesley, 2004, ISBN 0321125215.",
                            "MCLAUGHLIN, B. D.; POLLICE, G.; WEST, D. Head First ObjectOriented Analysis & Design, O'Reilly, 2006.",
                            "AMBLER, S. W. Agile modeling: effective practices for eXtreme programming and the unified process. Wiley, 2002. ISBN 0471202827."
                        ],
                        "bibliografia_complementar": [
                            "MILLETT, S.; TUNE, N. Patterns, Principles and Practices of DomainDriven Design. Wrox, 2015.",
                            "FOWLER, M. Analysis patternsreusable object models. AddisonWesley, 1997. ISBN 0201895420.",
                            "MELLOR, S. J; SHLAER, S. Análise de sistemas orientada para objetos. São Paulo: McGraw-Hill, 1990.",
                            "KOWAL, J. A Behavior models: specifying user's expectations. Prentice Hall, 1992. ISBN 0132927152.",
                            "WAGNER, F. Modeling software with finite state machinesa practical approach. Auerbach, 2006. ISBN 9780849380860."
                        ]
                    }
                }
            },
            {
                "id": "processos_de_software",
                "tipo": "card_expansível",
                "titulo": "Processos de Software",
                "url": "/disciplinas/processos_de_software",
                "resumo": "Processos de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "processos_de_software",
                    "nome": "Processos de Software",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "preiodo": "5°",
                    "enidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Visão geral (8h): processo, método e modelo.",
                        "Processos específicos de software: processos de implementação (12h), processos de suporte (12h) e processos de reutilização (2h).",
                        "Qualidade de Processo: modelos de qualidade de processos (12h), avaliação da qualidade do processo (12h) e abordagens de implementação de processo (6h)."
                    ],
                    "condicoesMinimas": [
                        "(Segue instruções). Explicar processos de software, a relação dessa área de conhecimento com as demais da engenharia de software e a relação com o conceito de sistema.",
                        "(Faz sem orientação). Correlacionar os conceitos de processo de software, método de software, modelo de software, modelo de processo e modelo de qualidade de processo.",
                        "(Faz sem orientação). Explicar quais são os processos específicos de software: objetivo de cada processo e principais resultados.",
                        "(Segue instruções). Explicar o uso de modelos de qualidade de processo: implementação e avaliação.",
                        "(Segue instruções). Obter resultados de processo usando métodos e modelos."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "FAIRLEY, R. E. Managing and Leading Software Projects, Wiley-IEEE Computer Society Press, 2009.",
                            "ISO/IEC/IEEE 12207:2008. Standard for Systems and Software Engineering-Software Life Cycle Processes. Portal:http://goo.gl/5ixAtq.",
                            "LARMAN, C. Agile and iterative development: a manager's guide. Addison-Wesley, 2004. ISBN 9780131111554."
                        ],
                        "bibliografia_complementar": [
                            "JOHNSON, K. A.; KULPA, M. K. Interpreting the CMMia process improvement approach. Auerbach, 2003. ISBN 0849316545.",
                            "BEEDLE, M.; SCHWABER, K. Agile software development with Scrum. Prentice Hall, 2002. ISBN 0130676349.",
                            "PROWELL, S. J. Cleanroom software engineering technology and process Reading, Mass.: Addison-Wesley, 1999. ISBN 0201854805.",
                            "CAPUTO, K. CMM implementation guide choreographing software process improvement. Addison-Wesley, 1998. ISBN 0201379384.",
                            "MAGUIRE, S. Debugging the development processpractical strategies for staying focused, hitting ship dates, and building solid teams. Microsoft, 1994. ISBN 1556156502."
                        ]
                    }
                }
            },
            {
                "id": "engenharia_de_sistemas",
                "tipo": "card_expansível",
                "titulo": "Engenharia de Sistemas",
                "url": "/disciplinas/engenharia_de_sistemas",
                "resumo": "Engenharia de sistemas é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "engenharia_de_sistemas",
                    "nome": "Engenharia de Sistemas",
                    "nucleo": "NC",
                    "teo": 64,
                    "pra": 0,
                    "total": 64,
                    "periodo": "5°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Fundamentos de engenharia (16h): métodos empíricos e técnicas experimentais; análise estatística; medição; design; modelagem, prototipação e simulação; normas e padrões; análise de causa raiz.",
                        "Fundamentos de sistema (16h): taxonomias de sistema; sistemas de engenharia (sistemas produzidos por engenharia - engineered systems); sistemas intensivos em software (software-intensive systems); sistemas de sistemas; complexidade de sistemas; propriedades emergentes; prmcipios do pensamento sistêmico; representação de sistemas por modelos.",
                        "Engenharia de Sistemas (32h): abordagens e metodologias; partes interessadas (stakeholders) e suas necessidades; ciclo de vida de sistemas de engenharia (concepção, conceitos operacionais, design, validação de design, construção, validação de construção, implantação, sustentação e descontinuação); processos do ciclo de vida de sistemas (negociação, preparação para projeto organizacional, gestão técnica, processos técnicos); qualidade de processo."
                    ],
                    "condicoesMinimas": [
                        "(Segue instruções). Modelar o ciclo de vida de um sistema intensivo em software, considerando as implicações e perspectivas dos processos do ciclo de vida de sistemas.",
                        "(Faz com orientação). Definir o conceito do sistema proposto (propósito desejado, contexto operacional, partes interessadas e conceito de uso do sistema).",
                        "(Segue instruções). Selecionar um modelo de ciclo de vida de software adequado ao modelo de ciclo de vida de engenharia de sistemas e integrar os dois modelos.",
                        "(Faz com orientação). Desenvolver conceitos operacionais do sistema (ambientes operacionais, características priorizadas, atributos de qualidade, cenários operacionais, suposições, dependências, limitações e exclusões)."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "SCHNEIDEWIND, N. Systems and Software Engineering with Applications. New York, NY: IEEE, 2009.",
                            "INCOSE. Systems Engineering Handbook: A Guide for System Life Cycle Processes and Activities, version 3.2.2. International Council on Systems Engineering (INCOSE), INCOSE-TP-2003-002-03.2.2, 2012.",
                            "WIDRIG, D.; LEFFINGWELL, D. Managing software requirements: a unified approach Boston: Addison-Wesley, 2001. ISBN 0201615932."
                        ],
                        "bibliografia_complementar": [
                            "MADACHY, R. J. Systems Engineering Principies for Software Engineers (Chapman & Hall/CRC Innovations in Software Engineering and Software Development Series) 1st Edition, CRC Press, 2016.",
                            "WILSON, W. E. Conceptos sobre ingenieria de sistemas Buenos Aires: Centro regional de Ayuda Tecnica, 1968. 254 p., il.",
                            "SILVA FILHO, B. S.; NISE, N. S. Engenharia de sistemas de controle. 3.ª edição. LTC, 2002, ISBN 85-216-1301-6.",
                            "MAFFEO, B. Engenharia de software e especificação de sistemas. Rio de Janeiro: Campus, 1992. 484 p. ISBN 8570017014.",
                            "NASCIMENTO, J. B. Metodologias de desenvolvimento de sistemas. São Paulo: Erica, 1993, ISBN 8571941483."
                        ]
                    }
                }
            },
            {
                "id": "design_de_software",
                "tipo": "card_expansível",
                "titulo": "Design de Software",
                "url": "/disciplinas/design_de_software",
                "resumo": "Design de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "design_de_software",
                    "nome": "Design de Software",
                    "nucleo": "NC",
                    "teo": 48,
                    "pra": 80,
                    "total": 128,
                    "periodo": "6°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [
                        "Fundamentos de design de software",
                        "Conceitos gerais de design",
                        "Contexto do design de software",
                        "Processo do design de software",
                        "Princípios do design de software",
                        "Pontos chaves no design de software",
                        "Concorrência",
                        "Controle e manejamento de eventos",
                        "Persistência de dados",
                        "Distribuição de componentes",
                        "Erro e manejamento de exceção e tolerância a falhas",
                        "Interação e apresentação",
                        "Segurança",
                        "Estrutura e arquitetura de software",
                        "Estruturas e pontos de vista arquiteturais",
                        "Estilos arquiteturais",
                        "Padrões de design",
                        "Decisões de design arquitetural",
                        "Famílias de programas e ferramentas de trabalho",
                        "Design de interface de usuário (UID)",
                        "Princípios gerais de design de interface de usuário",
                        "Considerações sobre design de interface de usuário",
                        "Modalidades de design de interação com o usuário",
                        "Apresentação do design de informação",
                        "Processo de design de interface de usuário",
                        "localização e internacionalização",
                        "metáforas e modelos conceituais",
                        "Análise e validação de design de software",
                        "Atributos de qualidade",
                        "Análise de qualidade e técnicas de avaliação",
                        "Medições",
                        "Notações de design de software",
                        "Descrições estruturais (Visão estática)",
                        "Descrições comportamentais (Visão dinâmica)",
                        "Estratégias e métodos de design de software",
                        "Estratégias gerais",
                        "Design orientado a função (estruturado)",
                        "Design orientado a objetos",
                        "Design centrado em estruturas de dados",
                        "Design baseado em componentes",
                        "Outros métodos",
                        "Ferramentas de design de software",
                        "Matriz de tópicos ou material de referência"
                    ],
                    "ementa": [
                        "Conceitos (8h): design, software, qualidade de software, requisitos de software, arquitetura de software e projeto detalhado.",
                        "Contexto de projeto de software (4h).",
                        "Processos e artefatos de projeto de software (8h).",
                        "Notações de projeto de software (8h).",
                        "Princípios e fundamentos de projeto de software (16h): abstração, acoplamento, coesão, decomposição, encapsulamento, separar interface e implementação, suficiência, completitude, simplicidade e separation of concerns.",
                        "Aspectos de projeto de software (16h): concorrência, controle e tratamento de eventos, tratamento de exceção, persistência, distribuição, interação (apresentação).",
                        "Qualidade de projeto de software (8h): técnicas de avaliação, medidas, ferramentas.",
                        "Métodos e estratégias de projeto (4h).",
                        "Método para projeto orientado a objetos (4h).",
                        "Padrões de projeto orientado a objetos (16h).",
                        "Prática de projeto de software orientado a objetos (36h)."
                    ],
                    "condicoesMinimas": [
                        "(Faz sem orientação). Explicar o que é software, qualidade de software, requisitos de software, arquitetura de software, projeto detalhado, design, e a relação entre eles.",
                        "(Faz com orientação). Aplicar princípios de projeto de software.",
                        "(Faz com orientação). Empregar aspectos de projeto de software.",
                        "(Faz com orientação). Fazer uso de medidas de qualidade de projeto de software.",
                        "(Segue instruções). Criar projeto de software a partir de um problema."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "BUDGEN, D. Software Design, International Edition, 2nd Edition, Pearson Education, 2011.",
                            "HALL, G. M. Adptive Code via C#: Agile coding with design patterns and SOLID principles. Microsoft Press, 2014.",
                            "RUPING, A. Agile documentationa pattern guide to producing lightweight documents for software projects. Wiley, 2003. ISBN 0470856173."
                        ],
                        "bibliografia_complementar": [
                            "MILLETT, S.; TUNE, N. Patterns, Principles, and Practices of DomainDriven Design,John Wiley & Sons, 2015.",
                            "ARGILA, C.; YOURDON, E. Análise e projeto orientados a objetos: estudos de casos São Paulo: Makron Books, 1999. ISBN 8534609756.",
                            "LARMAN, C. Applyng UML and patternsan introduction to objectoriented analysis and design. Prentice Hall PTR, 1997. ISBN 0137488807.",
                            "EVANS, E. Domain-driven designtackling complexity in the heart of software Boston, MA: Addison-Wesley, 2004. ISBN 0321125215.",
                            "HORSTMANN, C. S. Object-oriented design & patterns. 2nd edition. Hoboken, NJ: Wiley, 2006. ISBN 0471744875."
                        ]
                    }
                }
            },
            {
                "id": "dominios_de_software",
                "tipo": "card_expansível",
                "titulo": "Domínios de Software",
                "url": "/disciplinas/dominios_de_software",
                "resumo": "Domínios de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "dominios_de_software",
                    "nome": "Domínios de Software",
                    "nucleo": "NC",
                    "teo": 16,
                    "pra": 48,
                    "total": 64,
                    "periodo": "6°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Visão ampla de domínios de desenvolvimento (4h): sistemas, componentes e a relação entre eles.",
                        "Especificidades de alguns domínios de desenvolvimento (8h).",
                        "Especificidades de um domínio (12h): requisitos, projeto, construção.",
                        "Desenvolvimento de software em um domínio (ênfase na construção) (40h)."
                    ],
                    "condicoesMinimas": [
                        "(Faz com orientação). Explicar a construção de software, a relação dessa área de conhecimento com as demais da engenharia de software e a relação com o conceito de sistema.",
                        "(Faz com orientação). Usar e configurar ferramentas para edição, documentação, compilação, depuração (debugging), build, teste, controle de versão, coleta de medidas (desempenho, consumo de memória, análise estática e cobertura), integração contínua, e aplicativos fundamentais de linha de comandos.",
                        "(Faz com orientação). Criar código orientado a objetos em conformidade com o projeto (design) detalhado seguindo estratégias recomendadas.",
                        "(Segue instruções). Usar processos para a construção de software (criação de código, controle de versão, inspeção e integração).",
                        "(Segue instruções). Detalhar projeto (design) em conformidade com requisitos de software.",
                        "(Segue instruções). Colaborar com a construção de código em equipe.",
                        "(Segue instruções). Explicar domínios de desenvolvimento (categorias) e as especificidades correspondentes.",
                        "(Segue instruções). Explicar um domínio de software e as estratégias de desenvolvimento correspondentes."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "PILONE, D.; MILES, R.; Head-First Software Development, O'Reilly, 2008.",
                            "MCLAUGHLIN, B. D.; POLLICE, G.; WEST, D. Head First ObjectOriented Analysis & Design, O'Reilly, 2006.",
                            "BOOCH, G. Object-oriented analysis and design with applications. 2nd edition. Addison-Wesley, 1994. ISBN 0805353402."
                        ],
                        "bibliografia_complementar": [
                            "W AZLA WICK, R. S. Análise e design orientados a objetos para sistemas de informação: Modelagem com UML, OCL e IFML. 3.ª edição. Campus, 2010.",
                            "PENKER, M.; ERIKSSON, H. E. Business modeling with UML: business patterns at work. John Wiley & Sons, 2000. ISBN 0471295515.",
                            "ODELL, J. J. Advanced object-oriented analysis and design using UML.  Cambridge University Press, SIGS Books, 1998. ISBN 052164819X.",
                            "COCKBURN, A. Agile software development Boston: Addison-Wesley, 2002. (Agile software development series). ISBN 0201699699.",
                            "BEEDLE, M.; SCHWABER, K. Agile software development with Scrum. Prentice Hall, 2002. (Series in agile software development). ISBN 0130676349."
                        ]
                    }
                }
            },
            {
                "id": "processos_de_qualidade_de_software",
                "tipo": "card_expansível",
                "titulo": "Processos de Qualidade de Software",
                "url": "/disciplinas/processos_de_qualidade_de_software",
                "resumo": "Processos de qualidade de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "processos_de_qualidade_de_software",
                    "nome": "Processos de Qualidade de Software",
                    "nucleo": "NC",
                    "teo": 48,
                    "pra": 16,
                    "total": 64,
                    "periodo": "6°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Visão Geral de Qualidade de Software (4h): custos e impactos da qualidade de software, questões éticas e culturais da qualidade de software.",
                        "Processo de garantia da qualidade de software (IOh): garantia do produto e garantia do processo.",
                        "Processo de Verificação e Validação de Software (36h): requisito, projeto (design), código, integração, documentação.",
                        "Processos de Revisão e Auditoria de Software (14h): revisões gerenciais e revisões técnicas."
                    ],
                    "condicoesMinimas": [
                        "(Faz sem orientação). Explicar processos de qualidade de software, a relação dessa área de conhecimento com as demais da engenharia de software e a relação com o conceito de sistema.",
                        "(Faz com orientação). Explicar a diferença e a relação entre a garantia do produto e a garantia do processo.",
                        "(Segue instruções). Usar um processo da garantia da qualidade de software,",
                        "(Segue instruções). Usar um processo para a verificação e validação de software.",
                        "(Segue instruções). Usar um processo para a revisão e auditoria de software.",
                        "(Faz sem orientação). Colaborar em uma equipe na execução de um processo de qualidade.",
                        "(Segue instruções). Documentar resultados dos processos de qualidade de software.",
                        "(Segue instruções). Identificar e utilizar ferramentas de ap010 ao controle de qualidade de artefatos de software."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "Stefan Wagner. Software Product Quality Control. Springer-Verlag Berlin Heidelberg. 2013.",
                            "Software Quality Assurance: From Theory to Implementation, Daniel Galin, Addison-Wesley, 2004.",
                            "MURPHY, Mark L C/C++ software quality tools Upper Saddle River: Prentice Hall PTR, 1996. ISBN 0134451236."
                        ],
                        "bibliografia_complementar": [
                            "OSCIANSK, A.; SOARES, M. S. Qualidade de Software. Editora N ovatec, 2007.",
                            "CERTIFICAÇÃO CERTICS: um instrumento de política pública para inovação tecnológica em software. CTI Renato Archer, 2015. ISBN 9788565163088.",
                            "KELLIHER, T. P.; KEEGAN,J. G.; OLIVER, D. W. Engineering complex systems with models and objects. McGraw-Hill, 1997. ISBN 0070481881.",
                            "KAN, S. H. Metrics and models in software quality engineering. 2nd edition. Addison-Wesley, 2003. ISBN 0201729156.",
                            "BARTIÉ, A. Garantia da qualidade de software. Campus, 2002. ISBN 8535211245."
                        ]
                    }
                }
            },
            {
                "id": "gerencia_de_projeto_de_software",
                "tipo": "card_expansível",
                "titulo": "Gerência de Projeto de Software",
                "url": "/disciplinas/gerencia_de_projeto_de_software",
                "resumo": "Gerência de projeto de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "gerencia_de_projeto_de_software",
                    "nome": "Gerência de Projeto de Software",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "6°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Projeto e gerência de projeto (4h): ciclo de vida de produto, serviço e projeto; partes interessadas (stakeholders); correlação entre projetos, operações e programas; gerência de portfólio de projetos; escritório de projetos (PMO).",
                        "Tipos de projeto de software (4h): aquisição, desenvolvimento, refatoração, descontinuação.",
                        "Tipos de ciclo de vida de projeto de software (4h): preditivo, iterativo, adaptativo; processos empíricos e processos definidos e sua relação com métodos ágeis e métodos planejados para gerência de projeto de software.",
                        "Modelos de qualidade de processo de gerência de projeto de software (4h).",
                        "Áreas de conhecimento da gerência de projetos aplicadas a projetos de software (48h): escopo, tempo, custo, qualidade, recursos humanos, comunicações, riscos, aquisições, integração e partes interessadas."
                    ],
                    "condicoesMinimas": [
                        "(Segue instruções). Usar normas, modelos e ferramentas de gerência de projeto para planejamento e acompanhamento de projeto de software.",
                        "(Faz com orientação). Selecionar e implementar o tipo de modelo de processo (dirigido por plano, incremental ou adaptativo) de acordo com as características do contexto do projeto de software.",
                        "(Segue instruções). Selecionar e implementar o tipo de ciclo de vida de software (ou paradigma de engenharia de software - cascata, espiral, iterativo, baseado em modelo de maturidade, etc.) de acordo com as características do contexto do projeto de software."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "PMI. Um Guia do Conhecimento em Gerenciamento de Projetos. 5.ª edição. São Paulo: Saraiva, 2012. ISBN 9788502223721.",
                            "CHEMUTURI, M. K.; CAGLEY, T. M. Jr. Mastering Software Project Management: Best Practices, Tools and Techniques. J. Ross Publishing, 2010. ISBN-13: 978-1604270341.",
                            "COHN, M. Agile estimating and planning Upper Saddle River, NJ: Prentice Hall Professional Technical Reference, 2006. ISBN 0131479415."
                        ],
                        "bibliografia_complementar": [
                            "FAIRLEY, R.E. Managing and Leading Software Projects.John Wiley & Sons, 2009.",
                            "HIGHSMITH, J. A. Agile project management: creating innovative products 2nd. edition. Addison-Wesley, 2010. ISBN 0321658396.",
                            "SCHW ABER, K. Agile project management with Scrum. Microsoft Press, 2004. ISBN 073561993X.",
                            "DEMARCO, T. Controle de projetos de software: gerenciamento, avaliação, estimativa. Campus, 1991. ISBN 8570015283.",
                            "MARTINS, J. C. C. Gerenciando projetos de desenvolvimento de software com PMI, RUP e UML. 4.ª edição. Brasport, 2007."
                        ]
                    }
                }
            },
            {
                "id": "software_concorrente_e_distribuido",
                "tipo": "card_expansível",
                "titulo": "Software Concorrente e Distribuído",
                "url": "/disciplinas/software_concorrente_e_distribuido",
                "resumo": "Software concorrente e distribuido é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "software_concorrente_e_distribuido",
                    "nome": "Software Concorrente e Distribuído",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "7°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Qualidade de produto (4h): escalabilidade, tolerância a falhas, disponibilidade, desempenho.",
                        "Conceitos (4h): middleware, distribuição, paralelismo, concorrência, RESTful, web, internet das coisas, contêineres, troca de mensagens, micro-serviços, serviços web.",
                        "Métodos para construção de software distribuído e para construção de software concorrente (8h)",
                        "Concorrência (16h): paralelismo, aplicações 10-intensive e CPUintensive, thread safe, memória compartilhada, Software Transactional Memory, atores, abordagens para explorar concorrência.",
                        "Distribuição (24h): projeto, implementação e uso de interface de programação, RESTful, serviços web e micro-serviços (microservices).",
                        "Troca de mensagens (messagi,ng) (8h)"
                    ],
                    "condicoesMinimas": [
                        "(Faz com orientação). Explicar a construção de software, concorrência/distribuição e a relação desses com a engenharia de software e de sistema.",
                        "(Faz com orientação). Usar e configurar ferramentas para edição, documentação, compilação, depuração (debugging), build, teste, controle de versão, coleta de medidas (desempenho, consumo de memória, análise estática e cobertura), integração contínua, e aplicativos fundamentais de linha de comandos.",
                        "(Faz com orientação). Criar código orientado a objetos em conformidade com o projeto (design) detalhado seguindo estratégias recomendadas.",
                        "(Segue instruções). Usar processos para a construção de software (criação de código, controle de versão, inspeção e integração).",
                        "(Segue instruções). Detalhar projeto (design) em conformidade com requisitos de software.",
                        "(Segue instruções). Localizar e reutilizar código (bibliotecas e frameworks).",
                        "(Segue instruções). Colaborar com a construção de código em equipe.",
                        "(Segue instruções). Avaliar a qualidade interna de código e, quando apropriado, aplicar estratégias recomendadas de refatoração.",
                        "(Segue instruções). Explicar conceitos de concorrência e distribuição.",
                        "(Segue instruções). Criar código que faz uso de concorrência, distribuição e ferramentas correlatas."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "BUTCHER, P. Seven Concurrent Models in Seven Weeks. Pragmatic Bookshelf, 2014. ISBN-10: 1937785653.",
                            "DAIGNEAU, R. Service Design Pattern. Addison-Wesley, 2011. ISBN 032154420X.",
                            "FOSTER, I. Designing and building parallel programsconcepts and tools for parallel software engineering Reading, Mass.: AddisonWesley, 1995. ISBN 0201575949."
                        ],
                        "bibliografia_complementar": [
                            "NEWMAN, S. Building Microservices. O'Reilly, 2015.",
                            "BARNES, L. L. Client/server & beyound strategies for 21st century. Prentice-Hall, 1997. ISBN 0135325161.",
                            "SHATZ, S. M. Development of distributed software concepts and tools. Macmillan, 1993. ISBN 0024096113.",
                            "PAGE-JONES, M. Fundamentals of object-oriented design in UML. Addison-Wesley, 2003. ISBN 020169946X.",
                            "RODRIGUES, L.; GUERRAOUI, R. Introduction to reliable distributed programming. Springer, 2006. ISBN 9783540288459."
                        ]
                    }
                }
            },
            {
                "id": "experiencia_do_usuario_de_software",
                "tipo": "card_expansível",
                "titulo": "Experiência do Usuário de Software",
                "url": "/disciplinas/experiencia_do_usuario_de_software",
                "resumo": "Experiência do usuário de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "experiencia_do_usuario_de_software",
                    "nome": "Experiência do Usuário de Software",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "7°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Qualidade em uso (4h): usabilidade, acessibilidade.",
                        "Design centrado no usuário (8h): diretrizes, pesquisa, personas, jornadas de usuário, modelagem (especificação) e ferramentas.",
                        "Projeto de interação (16h): diretrizes, criação, modelagem (especificação) e ferramentas.",
                        "Design de software e interfaces gráficas (8): padrões arquiteturais para design da camada de apresentação (MVC, MVP, MVVM e outros).",
                        "Implementação de interfaces (20h).",
                        "Modelos de validação de experiência (8h): modelos, métodos e técnicas para validação de experiência do usuário."
                    ],
                    "condicoesMinimas": [
                        "(Faz com orientação). Explicar a construção de software, experiência do usuário e a relação com a Engenharia de Software e a noção se sistema.",
                        "(Faz com orientação). Usar e configurar ferramentas para edição, documentação, compilação, depuração (debugging), build, teste, controle de versão, coleta de medidas (desempenho, consumo de memona, análise estática e cobertura), integração contínua, e aplicativos fundamentais de linha de comandos.",
                        "(Faz com orientação). Criar código orientado a objetos em conformidade com o projeto (design) detalhado seguindo estratégias recomendadas.",
                        "(Segue instruções). Usar processos para a construção de software (criação de código, controle de versão, inspeção e integração).",
                        "(Segue instruções). Detalhar projeto (design) em conformidade com requisitos de software.",
                        "(Segue instruções). Colaborar com a construção de código em equipe.",
                        "(Segue instruções). Auxiliar na criação de requisitos de usabilidade.",
                        "(Segue instruções). Criar e registrar projeto de interação que atende requisitos de usabilidade.",
                        "(Faz com orientação). Usar ferramentas e bibliotecas para o desenvolvimento de código de interfaces.",
                        "(Faz com orientação). Criar código em conformidade com o projeto de interação correspondente."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "GOTHELF, J.; SEIDEN, J. Lean UX: Applying Lean Principles to Improve User Experience, O'Reilly, 2013.",
                            "KRUG, S., Dont make me think: revisited. New Riders, 2014. ISBN 978- 0321965516.",
                            "BORBA, F. E. Ajax: guia de programação. São Paulo: Erica, 2006. ISBN 8536501375."
                        ],
                        "bibliografia_complementar": [
                            "PREECE, J.; SHARP, H.; ROGERS, Y. Interaction Design: Beyond Human-Computer Interaction, Wiley, 2015. ISBN 978-1119020752.",
                            "CYBIS, W. O. Ergonomia e usabilidade: conhecimentos, métodos e aplicações. 2a. edição. São Paulo: Novatec, 2010. ISBN 9788575222324.",
                            "COUTAZ, J.; BASS, L. Developing software for the user interface. Addison-Wesley, 1991. ISBN 0201510464.",
                            "HARTSON, H. R.; HIX, D. Developing user interfaces: ensuring usability through product & process. Wiley, 1993. ISBN 0471578134.",
                            "OLSEN, D. R. Developing user interfaces. Morgan Kaufmann, 1998. ISBN 1558604189."
                        ]
                    }
                }
            },
            {
                "id": "arquitetura_de_software",
                "tipo": "card_expansível",
                "titulo": "Arquitetura de Software",
                "url": "/disciplinas/arquitetura_de_software",
                "resumo": "Arquitetura de Software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "arquitetura_de_software",
                    "nome": "Arquitetura de Software",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "7°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Conceitos (4h): software, qualidade de software, requisitos de software, arquitetura de software e projeto detalhado.",
                        "Requisitos funcionais e requisitos de qualidade (8h): conceituação e identificação de requisitos relevantes para a arquitetura.",
                        "Documentação de arquitetura de software (8h).",
                        "Fundamentos de arquitetura de software (4h): importância, contexto, estilos.",
                        "Método de desenvolvimento de arquitetura de software (8h).",
                        "Técnicas para satisfazer requisitos de qualidade (16h).",
                        "Criação de arquiteturas de software (16h)."
                    ],
                    "condicoesMinimas": [
                        "(Faz sem orientação). Explicar o que é software, qualidade de software, requisitos de software, arquitetura de software, projeto detalhado, e a relação entre eles.",
                        "(Faz com orientação). Compreender a documentação de arquitetura de software.",
                        "(Segue instruções). Documentar arquitetura de software.",
                        "(Segue instruções). Criar arquitetura de software."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "BASS, L.; CLEMENTS, P.; KAZMAN, R. Software Architecture m Practice, 3rd edition, Pearson Education, Inc., 2013.",
                            "CLEMENTS, P.; et al. Documenting Software Architectures: Views and Beyond. 2nd edition, Pearson Eduction, 2011.",
                            "MENDES, A Arquitetura de software: desenvolvimento orientado para arquitetura. Rio deJaneiro: Campus, 2002. ISBN 853521013X."
                        ],
                        "bibliografia_complementar": [
                            "CERVANTES, H.; KAZMAN, R. Designing Software Archtectures: A Practical Approach, ISBN-13: 978-0134390789, Addison-Wesley, 2016.",
                            "PUTMAN, J. Architecting with RM-ODP. Prentice Hall, 2001. ISBN 0130191167.",
                            "HEINEMAN, G. T.; COUNCILL, W. T. Component-based software engineering: putting the pieces together. Addison-Wesley, 2001. ISBN 0201704854.",
                            "BOSCH, J. Design and use of software architectures: adopting and evolving a product-line approach. Addison-Wesley, 2000. ISBN 0201674947.",
                            "JOHNSON, R. Expert one-on-one J2EE development without EJB. Wiley Publishing, 2004. ISBN 0764558315."
                        ]
                    }
                }
            },
            {
                "id": "requisitos_de_software",
                "tipo": "card_expansível",
                "titulo": "Requisitos de Software",
                "url": "/disciplinas/requisitos_de_software",
                "resumo": "Requisitos de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "requisitos_de_software",
                    "nome": "Requisitos de Software",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "7°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [
                        "Fundamentos de requisitos de software",
                        "Definição de um requisito de software",
                        "Requisitos de produto e processo",
                        "Requisitos funcionais e não funcionais",
                        "Propriedades emergentes",
                        "Requisitos quantificáveis",
                        "Requisitos de sistema e requisitos de software",
                        "Processo de requisitos",
                        "Modelos de processo",
                        "Atores do processo",
                        "Suporte e gerenciamento do processo",
                        "Qualidade e melhorias do processo",
                        "Elicitação de requisitos",
                        "Fontes dos requisitos",
                        "Técnicas de elicitação",
                        "Análise de requisitos",
                        "Classificação de requisitos",
                        "Modelagem conceitual",
                        "Design arquitetural e alocação de requisitos",
                        "Negociação de requisitos",
                        "Análise Formal",
                        "Especificação de requisitos",
                        "Documento de definição do sistema",
                        "Especificação de requisitos do sistema",
                        "Especificação de requisitos do software",
                        "Validação de requisitos",
                        "Revisão de requisitos",
                        "Prototipação",
                        "Validação do modelo",
                        "Teste de aceitação",
                        "Considerações práticas",
                        "Natureza iterativa do processo de requisitos",
                        "Gerência de mudanças",
                        "Atributos dos requisitos",
                        "Rastreabilidade dos requisitos",
                        "Requisitos de medição",
                        "Ferramentas de requisitos de software",
                        "Matriz de tópicos ou material de referência"
                    ],
                    "ementa": [
                        "Processo de requisitos (16h): definições básicas, eliciação de requisitos, análise de requisitos, especificação de requisitos, verificação e validação de requisitos.",
                        "Modelos e métodos da engenharia de requisitos (32).",
                        "Gerência de projetos de engenharia de requisitos (8).",
                        "Processo de projeto arquitetural (8h): relação com requisitos."
                    ],
                    "condicoesMinimas": [
                        "(Faz sem orientação). Explicar requisitos de software, a relação dessa área de conhecimento com as demais da engenharia de software, arquitetura de software em especial, e a relação com o conceito de sistema.",
                        "(Segue instruções). Usar um processo de requisitos de software.",
                        "(Segue instruções). Eliciar de requisitos de software.",
                        "(Segue instruções). Construir modelos conceituais de software.",
                        "(Segue instruções). Especificar requisitos de software.",
                        "(Faz com orientação). Verificar e validar requisitos de software.",
                        "(Segue instruções). Identificar e utilizar ferramentas de requisitos de software.",
                        "(Faz sem orientação). Colaborar em uma equipe na execução de um processo de requisitos."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "WIEGERS, K. E. Software Requirements. Microsoft Press, 3rd edition, 2013.",
                            "ROBERTSON, S. Mastering the Requirements Process: Getting Requirements Right. Addison-Wesley Professional, 3rd edition, 2012.",
                            "WINTERS, J. P.; SCHNEIDER, G. Applying use cases: a practical guide, 2nd edition. Addison-Wesley, 2001. (The Addison-Wesley object technology series). ISBN 0201708531."
                        ],
                        "bibliografia_complementar": [
                            "COCKBURN, A Writing Effective Use Cases. Addison-Wesley, 2000.",
                            "MELLOR, S. J; SHLAER, S. Análise de sistemas orientada para objetos. São Paulo: McGraw-Hill, 1990.",
                            "MILLER, G.; ARMOUR, F. Advanced use case modeling: software systems. Boston: Addison-Wesley, 2001. (Addison-Wesley object technology series) ISBN 0201615924.",
                            "YOURDON, E.; COAD, P. Análise baseada em objetos. 2a. edição. Rio de Janeiro: Campus, 1996. ISBN 8535200428.",
                            "WIEGERS, K. E. More about software requirements: thorny issues and practical advice. Microsoft Press, 2006. ISBN 9780735622678."
                        ]
                    }
                }
            },
            {
                "id": "governanca_e_gestao_de_servicos_de_software",
                "tipo": "card_expansível",
                "titulo": "Governança e Gestão de Serviços de Software",
                "url": "/disciplinas/governanca_e_gestao_de_servicos_de_software",
                "resumo": "Governança e gestão de serviços de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "governanca_e_gestao_de_servicos_de_software",
                    "nome": "Governança e Gestão de Serviços de Software",
                    "nucleo": "NC",
                    "teo": 48,
                    "pra": 16,
                    "total": 64,
                    "periodo": "7°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Governança (8h): governança corporativa; governança de TI (GTI); governança de Software (GS); princípios da GS; conformidade (compliance); alinhamento dos serviços de software ao negócio da organização; normas, frameworks, padrões, modelos de qualidade e de maturidade de GS.",
                        "Abordagens para GS (8h): aplicação de abordagens de GS em um contexto organizacional. Objetivos de controle para GS; indicadores e avaliação de desempenho de software; direcionamento, avaliação e controle do uso de serviços de software para apoiar os objetivos de uma organização.",
                        "Planejamento e controle estratégico de software (8h): alinhamento entre objetivos organizacionais e objetivos relacionados a software; avaliação, direcionamento e monitoramento de processos de software; diagnóstico de maturidade de processos de software; alinhamento de políticas de software ao plano diretor de TI de uma organização. Gestão de riscos de software; riscos organizacionais; riscos relacionados à segurança física e lógica de software.",
                        "Governança de dados (8h): Segurança da informação em uma organização; Segurança de software.",
                        "Software como um serviço (SaaS) (8h): serviços de Software (SS); gestão de Serviços de Software (GSS); Estratégia organizacional para SS; Modelos, normas e padrões relacionados à GSS.",
                        "Ciclo de vida de SS (8h): planejamento; desenvolvimento; implantação e sustentação; Operação de SS e apoio (suporte) à operação de SS; Descontinuação de SS.",
                        "Manutenção de SS (8h): correção, adaptação e evolução de SS; gestão de incidentes e problemas em SS; controle de mudança e de configuração; controle de qualidade.",
                        "Gerência de processos de negócio (BPM - Business Process Management) aplicada à GSS (8h): representação de SS como processos de negócio; notação para modelagem de processos de negócio (BPMN); análise, validação e evolução de processos de negócio e de SS."
                    ],
                    "condicoesMinimas": [
                        "(Segue instruções). Planejar a estratégia de software para uma organização, considerando a pouca disponibilidade de informações de longo prazo, a escassez de recursos para implementação dessa estratégia e a necessidade de alinhamento entre a GS e a governança corporativa.",
                        "(Faz com orientação). Controlar o uso atual e futuro de software, otimizando o seu valor agregado para o negócio da organização.",
                        "(Segue instruções). Planejar e implementar (projetar, desenvolver, implantar, monitorar, medir, controlar e sustentar) uma estratégia organizacional para GSS em conformidade com o plano estratégico da organização.",
                        "(Faz com orientação). Modelar SS e processos de negócio, usando BPMN, em conformidade com os requisitos organizacionais dos processos e serviços."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "GREMBERGEN, W. V.; HAES, S. Enterprise Governance of Information Technology: Achieving Strategic Alignment and Value. Springer, 2010. ISBN-13 978-1441946621.",
                            "BROOKS, P. Metrics for Service Management: Designing for ITIL. 1st edition. Van Haren Publishing, 2012.",
                            "SHIAVON, M. Acordos de nível operacional para controle do processo de manutenção de software, Mestrado em Engenharia Elétrica, Universidade Federal de Goiás, 2009."
                        ],
                        "bibliografia_complementar": [
                            "GUTH, S. Contract Negotiation Handbook: Software as a Service. Guth Ventures LLC, 2013.",
                            "ERDOGMUS, H.; TANIR, O. Advances in software engineering comprehension, evaluation, and evolution. Springer, 2002. ISBN 0387951091.",
                            "HASS, A. M. J. Configuration management principles and practice. Addison-Wesley, 2003. (The Agile software development series). ISBN 0321117662.",
                            "MARSHALL, C. Enterprise modeling with UML: designing successful software through business analysis. Addison-Wesley, 2000. ISBN 0201433133.",
                            "CENTRO DE GESTÃO E ESTUDOS ESTRATÉGICOS. Ciência, tecnologia e sociedade: novos modelos de governança. Brasília, CGEE, 2005."
                        ]
                    }
                }
            },
            {
                "id": "software_para_sistemas_ubiquos",
                "tipo": "card_expansível",
                "titulo": "Software para Sistemas Ubíquos",
                "url": "/disciplinas/software_para_sistemas_ubiquos",
                "resumo": "Software para sistemas ubíquos é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "software_para_sistemas_ubiquos",
                    "nome": "Software para Sistemas Ubíquos",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "8°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Sistemas de informação que fazem uso de dispositivos (ubíquos) (16h): smartphones, sensores, internet das coisas (IoT), stream analytics e aspectos de segurança (vulnerabilidades, criptografia, certificados digitais).",
                        "Definição de arquiteturas para soluções móveis (16): conectar serviços, possivelmente de grande volume, fluxo e em tempo real, com a necessidade de analisá-los.",
                        "Desenvolvimento de código para smartphone, sensor ou outro dispositivo capaz de alimentar/receber informações de sistema de informação (32h)."
                    ],
                    "condicoesMinimas": [
                        "(Faz com orientação). Explicar a construção de software, dispositivos e a relação desses com a engenharia de software e de sistema.",
                        "(Faz sem orientação). Explicar a construção de software e a relação dessa área de conhecimento com as demais da engenharia de software.",
                        "(Faz com orientação). Usar e configurar ferramentas para edição, compilação, depuração (debugging), build, teste, controle de versão, coleta de medidas (desempenho, consumo de memória, análise estática e cobertura), integração contínua, e aplicativos de linha de comandos para busca e encadear comandos.",
                        "(Faz com orientação). Criar código orientado a objetos em conformidade com o projeto (design) detalhado seguindo estratégias recomendadas.",
                        "(Faz com orientação). Usar processos para a construção de software (criação de código, controle de versão, inspeção e integração).",
                        "(Faz com orientação). Detalhar projeto (design) em conformidade com requisitos de software.",
                        "(Faz com orientação). Detalhar projeto de interação (design) em conformidade com requisitos de software.",
                        "(Faz com orientação). Localizar e reutilizar código (bibliotecas e frameworks).",
                        "(Faz com orientação). Colaborar com a construção de código em equipe.",
                        "(Faz com orientação). Explicar a construção de software, segurança e a relação desses com a engenharia de software e de sistema.",
                        "(Segue instruções). Auxiliar na criação de modelo de ameaça.",
                        "(Segue instruções). Criar código que faz uso de recursos de segurança (criptografia de dados, assinatura e verificação de assinatura digital)."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "MCGRAW, G. Software Security: Build Security ln. Addison-Wesley, 2006.",
                            "GREENGARD, S. The Internet ofThings. The MIT Press, 2015.",
                            "WILMSHURST, T. An introduction to the design of small-scale embedded systems. Palgrave, 2001. ISBN 0333929942."
                        ],
                        "bibliografia_complementar": [
                            "MANICO, J.; DETLEFESEN, A. Iron-Clad Java: Building Secure Web Applications. McGraw-Hill, 2014.",
                            "HOWARD, M. 19 deadly sins of software securityprogramming flaws and how to fix them. McGraw-Hill/Osborne, 2005. ISBN 0072260858.",
                            "MARK, D. Dominando o desenvolvimento no iPhone: explorando o SDK do iPhone. Alta Books, 2009. ISBN 97885760833757.",
                            "VAHID, F. Embedded system design: a unified hardware/software introduction. John Wiley & Sons, 2002. ISBN 0471386782.",
                            "KERN, C.; KESAVAN, A.; DASWANI, N. Foundations of security: what every programmer needs to know. Apress, 2007. ISBN 9781590597842."
                        ]
                    }
                }
            },
            {
                "id": "software_para_persistencia_de_dados",
                "tipo": "card_expansível",
                "titulo": "Software para Persistência de Dados",
                "url": "/disciplinas/software_para_persistencia_de_dados",
                "resumo": "Software para persistência de dados é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "software_para_persistencia_de_dados",
                    "nome": "Software para Persistência de Dados",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "8°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Visão geral de persistência (12h): arquivos em formato texto/binário. Serialização de objetos. Documentos XML. JSON. Bancos de dados relacionais. Bancos NoSql.",
                        "Modelagem e implementação de bancos de dados (28h).",
                        "Mapeamento entre 00 e relacional (8h).",
                        "Refatoração de bancos de dados (8h).",
                        "Integração de bancos de dados (8h)."
                    ],
                    "condicoesMinimas": [
                        "(Faz com orientação). Explicar a construção de software, persistência e a relação desses com a engenharia de software e de sistema.",
                        "(Segue instruções). Identificar e usar estratégia adequada de persistência de dados para um dado problema.",
                        "(Faz com orientação). Usar ferramentas para definição e manipulação de bancos de dados.",
                        "(Faz com orientação). Criar código que cria, busca, atualiza e remove dados em bancos de dados.",
                        "(Segue instruções) Refatorar (refactoring) bases de dados.",
                        "Faltou exigências de construção (anteriores)."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "REDMOND, E.; WILSON, J. Seven databases in Seven Weeks. Pragmatic Bookshelf, 2012.",
                            "MCMURTRY, D. et al. DataAccess for Highly-Scalable Solutions: Using SQL, NoSQL, and Polyglot Persistence. Microsoft Press, 2013.",
                            "AMBLER, S. W. Agile database techniques: effective strategies for the agile software developer. Wiley, 2003. ISBN 0471202835."
                        ],
                        "bibliografia_complementar": [
                            "AMBLER, S. J.; SADALAGE, P. J. Refactoring Databases. AddisonWesley, 2006.",
                            "GOLENDZINER, L. G.; PRICE, R. T. Bancos de dados para aplicações não convencionais. EBAI, 1989. ISBN 950139879.",
                            "F ALINO, J.; HERION, D.; MARTINER, W. Building distributed applications with ADO. John Wiley & Sons, 1999. ISBN 0471317012.",
                            "KING, G.; BAUER, C. Java Persistence com Hibernate. Ciencia Moderna, 2007. ISBN 9788573936148.",
                            "MANNINO, M. V. Projeto, desenvolvimento de aplicações e administração de banco de dados. McGraw-Hill, 2008. ISBN 9788577260201."
                        ]
                    }
                }
            },
            {
                "id": "padroes_de_arquitetura_de_software",
                "tipo": "card_expansível",
                "titulo": "Padrões de Arquitetura de Software",
                "url": "/disciplinas/padroes_de_arquitetura_de_software",
                "resumo": "Padrões de arquitetura de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "padroes_de_arquitetura_de_software",
                    "nome": "Padrões de Arquitetura de Software",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "8°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Conceitos (12h): arquitetura de software e padrões de arquitetura (blackboard, microservices, invocação implícita, arquitetura orientada a serviços, multitier, arquitetura orienta a eventos, plugin, filtros e pipes, MVC.",
                        "Norma ISO/IEC/IEEE 42010:2011 (8h).",
                        "Análise (avaliação) de arquiteturas de software (12h).",
                        "Criação de arquiteturas de software (32h)."
                    ],
                    "condicoesMinimas": [
                        "(Faz sem orientação). Compreender a documentação de arquitetura de software.",
                        "(Faz com orientação). Explicar padrões de arquitetura e ilustrar o uso.",
                        "(Faz com orientação). Documentar arquitetura de software.",
                        "(Segue instruções). Realizar análise de arquitetura de software.",
                        "(Segue instruções). Criar arquitetura de software que se beneficia de padrões de arquitetura."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "FOWLER, M., Patterns of Enterprise Application Architecture, ISBN - 13: 978-0321127426, Addison-Wesley, 2002.",
                            "DAIGNEAU, R., Service Design Patterns, ISBN-13: 978-0321544209, Addison-Wesley, 2011.",
                            "BUSCHMAN, F. Pattern-oriented software architecture. Wiley, 2001. ISBN 0471606952."
                        ],
                        "bibliografia_complementar": [
                            "VERNON, V. Implementing Domain-Driven Design. Addison-Wesley, 2013. ISBN 978-0-321-83457-7.",
                            "GAMMA, E. Design patterns elements of reusable object-oriented software. Addison Wesley, 1995. ISBN 0201633612.",
                            "TROTT, J.; SHALLOWAY, A. Design patterns explained: a new perspective on object-oriented design. 2nd ed. Addison-Wesley, 2005. ISBN 0321247140.",
                            "PREE, W. Design patterns for object-oriented software development. Addison-Wesley, 1995. ISBN 0201422948.",
                            "FREEMAN, E. et al. Head First design patterns. O'Reilly, 2004. ISBN 0596007124."
                        ]
                    }
                }
            },
            {
                "id": "teste_de_software",
                "tipo": "card_expansível",
                "titulo": "Teste de Software",
                "url": "/disciplinas/teste_de_software",
                "resumo": "Teste de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "teste_de_software",
                    "nome": "Teste de Software",
                    "nucleo": "NC",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "8°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Processo de construção (8h): definições básicas, atividades e documentação.",
                        "Processo de Teste de Software (56): definições básicas, técnicas de teste, teste baseado em intuição e experiência do engenheiro de software, atividades do processo, documentação e ferramentas."
                    ],
                    "condicoesMinimas": [
                        "(Faz sem orientação). Explicar o teste de software, a relação dessa área de conhecimento com as demais da engenharia de software e a relação com o conceito de sistema.",
                        "(Segue instruções). Usar um processo de teste de software.",
                        "(Segue instruções). Desenvolver planos de teste para o teste de unidade.",
                        "(Faz com orientação). Propor casos de teste segundo algum critério da técnica de teste funcional para o teste de unidade.",
                        "(Faz com orientação). Propor casos de teste segundo algum critério da técnica de teste estrutural para o teste de unidade.",
                        "(Faz com orientação). Construir código para automação do teste de software.",
                        "(Segue instruções). Aplicar teste exploratório no teste de sistema.",
                        "(Faz sem orientação). Executar casos de teste.",
                        "(Faz sem orientação). Citar e explicar métricas de teste de software.",
                        "(Segue instruções). Realizar medições pertinentes a teste de software.",
                        "(Faz com orientação). Documentar atividades do teste de software.",
                        "(Segue instruções). Identificar e utilizar ferramentas de teste de software."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "MYERS, G. J. The Art of Software Testing. Wiley. 2011.",
                            "COPELAND, L. A Practitioner's Cuide to Software Test Design. Artech House, 2003.",
                            "SYKES, D. A.; MCGREGOR, J. D. A practical guide to testing objectoriented software. Addison-Wesley, 2001. ISBN 0201325640."
                        ],
                        "bibliografia_complementar": [
                            "MESZAROS, G. xUnit test patternsrefactoring test code. AddisonWesley, 2007. ISBN 0131495054.",
                            "MOSLEY, D. J. Client-server software testing on the desktop and the Web. Prentice Hall, 2000. ISBN 0131838806.",
                            "GROSS, H. Component-based software testing with UML. Springer, 2005. ISBN 354020864X.",
                            "PERRY, W. E. Effective methods for software testing. 2nd edition. J. Wiley, 1999. ISBN 047135418X.",
                            "WU, M.; LI, K. Effective software test automationdeveloping an automated software testing tool. SYBEX, 2004. ISBN 0782143202."
                        ]
                    }
                }
            },
            {
                "id": "pratica_em_engenharia_de_software",
                "tipo": "card_expansível",
                "titulo": "Prática em Engenharia de Software",
                "url": "/disciplinas/pratica_em_engenharia_de_software",
                "resumo": "Prática em engenharia de software é uma disciplina obrigatória e faz parte do núcleo comum do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "pratica_em_engenharia_de_software",
                    "nome": "Prática em Engenharia de Software",
                    "nucleo": "NC",
                    "teo": 0,
                    "pra": 320,
                    "total": 320,
                    "periodo": "9°",
                    "unidade": "INF",
                    "obrigatoria": "Sim",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "descricao": "O egresso do BES passa pela vivência de dois tipos de experiências práticas diferentes em suas essências. O primeiro grupo de experiências é composto pelas experiências promovidas nas atividades práticas realizadas de maneira contínua e integrada desde o início do curso, no contexto das diversas disciplinas teórico-práticas que compõem a grade curricular do BES. O segundo tipo de experiências é proporcionado pela disciplina \"Prática em Engenharia de Software\", que envolve a participação integral do aluno em projetos reais de Engenharia de Software realizados em ambiente típico da indústria de software. É importante contrapor esse cenário de \"projeto real\", onde todas as competências são exigidas, com o cenário das atividades práticas realizadas dentro do contexto de uma disciplina, normalmente limitado pelo conteúdo da própria disciplina. A Engenharia de Software compreende o uso de processos. Tais processos são claramente explicitados no projeto pedagógico do curso e podem ser classificados em dois grandes tipos: Processos Técnicos de Engenharia de Software e Processos de Gestão de Engenharia de Software. Além disso, o domínio de Tecnologias de Engenharia de Software, aplicadas tanto a processos técnicos quanto a processos de gestão de Engenharia de Software, é uma competência obrigatória para o profissional que trabalha com software. Assim, pode-se considerar que o Engenheiro de Software deve ser capaz de realizar atividades que envolvem três tipos de competências: técnicas, gerenciais e tecnológicas. A disciplina \"Prática em Engenharia de Software\" fornece o ambiente necessário para o amadurecimento das competências dos estudantes, pela aquisição de conhecimentos e desenvolvimento de habilidades e atitudes como profissional de Engenharia de Software. Esta prática acontece na fase final do currículo, na qual são reforçadas as habilidades, competências e conhecimentos adquiridos ao longo das disciplinas teórico-práticas do curso, em um ambiente que representa de forma realista os cenários que serão experimentados na vida profissional do Engenheiro de Software. O INF possui uma Fábrica de Software (FS/INF) [CUSUMANO]. O termo \"Fábrica\" indica um comprometimento de longo prazo e de esforços integrados, acima do nível de projetos individuais, para aprimorar todas as operações de obtenção de software [AAEN]. NA FS/INF, os projetos têm como objetivo atender as necessidades de usuários e patrocinadores reais, ou seja, visam a geração de produtos e/ou a prestação de serviços em Engenharia de Software para a sociedade. Dessa forma, os projetos precisam atender, por exemplo, requisitos de qualidade, de escopo e restrições de custo e prazo definidos pelas partes interessadas do projeto em questão. Além disso, a FS/INF também é responsável por garantir os requisitos definidos pelas normas técnicas aplicáveis de Engenharia de Software. Todas as atividades da Prática em Engenharia de Software previstas no BES são realizadas na FS/INF, sob a supervisão direta de docentes do Instituto de Informática. Portanto, a cada semestre letivo, a FS/INF recebe docentes e estudantes que atuarão nos seus projetos. Cabe ressaltar que, embora os projetos e as atividades da FS/INF não estejam limitados pelo calendário acadêmico, existe um compromisso entre a FS/INF e o curso de BES assegurando que o processo de Gestão do Portfólio da Fábrica selecionará os projetos e as atividades que apresentem condições adequadas ao exercício das práticas de Engenharia de Software pelos estudantes como descritas nesse PPC. Desta forma, o estudante terá a oportunidade concreta de integrar teoria e prática, envolvendo-se em situações-problema geradas pela experiência de campo e que exigem atividades de pesquisa, consultorias, debates e adoção de novas condutas. É também uma oportunidade para que o estudante seja avaliado quanto à sua atitude ética e profissional, quanto ao respeito às normas institucionais da FS/INF e quanto à sua relação com os demais envolvidos no projeto, incluindo usuários e patrocinadores. A \"Prática em Engenharia de Software\" é realizada pelo estudante preferencialmente após ter obtido aprovação nas demais disciplinas do BES. A disciplina é integralizada com 320 horas de atividades relacionadas a projetos da FS/INF, é ofertada a cada semestre letivo e os docentes atuam como preceptores. Neste sentido, o docente é o profissional responsável pela integração teoria-prática ao longo do projeto, ensinando, supervisionando, orientando e conduzindo o aluno na prática efetiva de sua futura profissão. Os estudantes são divididos em três grupos para melhor acompanhamento das atividades. Cada grupo, em um dado instante, realiza um tipo de atividade típica do exercício profissional: processos técnicos, processos de gestão ou domínio de tecnologias. Ao final da disciplina, é garantido que todos os grupos vivenciaram atividades dos três tipos. A avaliação do estudante é formativa, enfatizando o seu acompanhamento durante todo o período letivo, com o intuito de não apenas verificar se o estudante está alcançando os objetivos propostos, mas também informando seus erros e acertos, além de promover o estímulo necessário para continuar os estudos e o seu desenvolvimento. Concluindo, a disciplina \"Prática em Engenharia de Software\" favorece um ensino baseado na prática, com foco centrado na ética e na postura do profissional de Engenharia de Software perante os desafios que ocorrem quando se trabalha com software, que é um dos artefatos mais complexos que a humanidade produz. Quando o estudante atua em atividades práticas relevantes para a sua futura vida profissional, enfrentando os desafios reais de sua profissão ainda durante sua formação, sua compreensão se torna cada vez mais crítica e comprometida com a sociedade na qual se insere. Portanto, essa disciplina estimula e valoriza as dimensões ética e humanística na formação do Engenheiro de Software, desenvolvendo atitudes e valores orientados para a cidadania e para o desenvolvimento da sociedade.",
                    "ementa": [
                        "Aplicação do corpo de conhecimento da Engenharia de Software no contexto de projetos realizados em uma Fábrica de Software (320h): emprego de processos de Engenharia de Software em abrangência e profundidade; seleção e utilização de normas, métodos, técnicas e ferramentas de Engenharia de Software para atingir objetivos estabelecidos no projeto; integração e consolidação de conhecimentos e habilidades esperadas do profissional de Engenharia de Software; exercício de práticas e atitudes profissionais embasadas no código de ética e na postura profissional da Engenharia de Software; prática em processos técnicos de Engenharia de Software; prática em Gestão de Engenharia de Software; prática em Tecnologias de Engenharia de Software."
                    ],
                    "condicoesMinimas": [
                        "(Faz sem orientação). Realizar pacotes de trabalho, desenvolvendo produtos ou serviços dentro de um projeto na Fábrica de Software, aplicando as disciplinas que formam o corpo de conhecimento da Engenharia de Software.",
                        "(Faz sem orientação). Planejar, realizar e modificar de forma apropriada produtos e serviços pertinentes a processos organizacionais da Engenharia de Software, dentro do contexto da Fábrica de Software.",
                        "(Faz sem orientação). Atuar individualmente e nas equipes de trabalho segundo o código de ética e a postura profissional da Engenharia de Software."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "SOMMERVILLE, I. Engenharia de Software. Pearson, 10.ª edição, 2015. 118.",
                            "MCCONNELL, S. Code complete: a practical handbook of software construction. 2nd edition. Microsoft Press, 2009.",
                            "PAULA, W. P. Engenharia de software: fundamentos, métodos e padrões 3.ª edição. LTC, 2009. ISBN 9788521616504."
                        ],
                        "bibliografia_complementar": [
                            "PRESSMAN, R. Engenharia de Software. 8.ª edição. McGraw-Hill, 2014.",
                            "SCHACH, S. R. Engenharia de software: os paradigmas clássicos & orientados a objetos. 7.ª edição. McGraw-Hill, 2009. ISBN 9788577260454.",
                            "PFLEEGER, S. L. Engenharia de software: teoria e prática. 2.ª edição. Prentice Hall, 2004. ISBN 8587918311.",
                            "PEDRYCZ, W.; PETERS, J. F. Engenharia de software: teoria e prática. Campus, 2003. ISBN 8535207465.",
                            "MAGELA, R. Engenharia de software aplicada: princípios. Alta Books, 2006. ISBN 8576081202."
                        ]
                    }
                }
            }
        ]
    },
    {
        "id": "disciplinas_optativas",
        "titulo": "Disciplinas Optativas",
        "subtopicos": [
            {
                "id": "sistemas_operacionais",
                "tipo": "card_expansível",
                "titulo": "Sistemas Operacionais",
                "url": "/disciplinas/sistemas_operacionais",
                "resumo": "Sistemas operacionais é uma disciplina optativa e faz parte do núcleo específico do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "disciplinas_optativas",
                    "nome": "Sistemas Operacionais",
                    "nucleo": "NE",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "3°",
                    "unidade": "INF",
                    "obrigatoria": "Não",
                    "prerequisito": [
                        "arquitetura_de_computadores"
                    ],
                    "topicos_swebok": [],
                    "ementa": [
                        "Conceitos de Hardware e Software.",
                        "Tipos de Sistemas Operacionais. Organização da Estrutura Interna do Sistema Operacional. Gerência de Processos. Gerência do Processador. Gerência de Memória. Gerência de Dispositivos de Entrada e Saída. Sistemas de Arquivos.",
                        "Estudos de casos de sistemas operacionais atuais."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "OLIVEIRA, R. S.; CARISSIMI, A. S.; TOSCANI, S. S. Sistemas Operacionais. 3.ª edição. Porto Alegre: Instituto de Informática da UFRGS: Editora Sagra Luzzatto, 2004.",
                            "SILBERSCHATZ, A. Fundamentos de Sistemas Operacionais, 8.ª edição, LTC, 2011.",
                            "TANEMBAUM, A. S. Sistemas Operacionais Modernos. 3.ª edição. São Paulo: Editora Prentice Hall, 2010. ISBN 9788576052371."
                        ],
                        "bibliografia_complementar": [
                            "DEITEL, H. Sistemas Operacionais, Prentice Hall, 2005.",
                            "MACHADO, F. B. Arquitetura de Sistemas Operacionais. 2.ª edição. LTC, 1997.",
                            "NEMETH E.; SNYDER, G.; HEIN, T. R. Unix system administration handbook. Pearson Prentice Hall, 1997. ISBN 9788576051121.",
                            "O'GORMAN, J. Operating Systems with Linux. Palgrave, 2001.",
                            "SHAY, W. Sistemas Operacionais, Makron Books, 1996."
                        ]
                    }
                }
            },
            {
                "id": "pesquisa_operacional",
                "tipo": "card_expansível",
                "titulo": "Pesquisa Operacional",
                "url": "/disciplinas/pesquisa_operacional",
                "resumo": "Pesquisa operacional é uma disciplina optativa e faz parte do núcleo específico do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "pesquisa_operacional",
                    "nome": "Pesquisa Operacional",
                    "nucleo": "NE",
                    "teo": 64,
                    "pra": 0,
                    "total": 64,
                    "periodo": "3°",
                    "unidade": "INF",
                    "obrigatoria": "Não",
                    "prerequisito": [
                        "algebra_linear"
                    ],
                    "topicos_swebok": [],
                    "ementa": [
                        "Modelagem.",
                        "Problema de Programação Linear (PL). Resolução gráfica de PL.",
                        "Algoritmo Simplex. Dualidade. Algoritmo Simplex-Dual.",
                        "Pós-otimização e Análise de Sensibilidade."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "BREGALDA, P. F.; OLIVEIRA, A. A. F.; BORNSTEIN, C. T. Introdução à programação linear. 3. ed. Rio de Janeiro: Campus, 1983.",
                            "GOLBARG, M.; LUNA, H. Otimização combinatória e programação linear. 2. ed. Campus, 2005.",
                            "TAHA, H. Pesquisa operacional. 8. ed. Prentice Hall, 2008."
                        ],
                        "bibliografia_complementar": [
                            "BAZARAA M. S.; JARVIS, J. J.; SHERALI, H. D. Linear programming and network Flows. Wiley, 2009.",
                            "HILLIER, F. S.; LIEBERMAN, G. J. Introdução à pesquisa operacional. 9.ª edição. Amgh Editora, 2013.",
                            "PARLAR, M. Interactive operations research with Maple: methods and models. Birkhauser, 2000.",
                            "SILVA, E. M. et al. Pesquisa Operacional: programação linear, simulação. 3.ª ed. Atlas, 1998.",
                            "WINSTON, W. L. Operations research applications and algorithms. 3rd ed. Duxbury Press, 1997."
                        ]
                    }
                }
            },
            {
                "id": "linguagens_formais_e_automatos",
                "tipo": "card_expansível",
                "titulo": "Linguagens Formais e Autômatos",
                "url": "/disciplinas/linguagens_formais_e_automatos",
                "resumo": "Linguagens formais e autômatos é uma disciplina optativa e faz parte do núcleo específico do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "linguagens_formais_e_automatos",
                    "nome": "Linguagens Formais e Autômatos",
                    "nucleo": "NE",
                    "teo": 64,
                    "pra": 0,
                    "total": 64,
                    "periodo": "3°",
                    "unidade": "INF",
                    "obrigatoria": "Não",
                    "prerequisito": [
                        "fundamentos_de_matematica_para_computacao"
                    ],
                    "topicos_swebok": [],
                    "ementa": [
                        "Conceitos básicos de linguagens.",
                        "Mecanismos geradores (gramáticas) e reconhecedores (determinísticos e não determinísticos) de linguagens regulares, livres de contexto e sensíveis ao contexto; relação entre estas classes de linguagens e suas principais propriedades.",
                        "Hierarquia de Chomsky."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "SUDKAMP, T. A. Languages and machines. 3.a edição. Addison Wesley, 2006.",
                            "SIPSER, M. Introduction to the theory of computation. ITP, 1997. ISBN 053494728X.",
                            "HOPCROFT, J. E.; MOTWANI, R.; ULLMAN, J. D. Introdução à teoria de autômatos: linguagens e computação. Campus, 2002."
                        ],
                        "bibliografia_complementar": [
                            "RAMOS, M. V. M.; NETO, J. J.; VEGA, I. S. Linguagens formais: teoria, modelagem e implementação. Bookman, 2009.",
                            "CARROLL, J.; LONG, D. Theory of finite automata. New Jersey: Prentice-Hall International Editions, 1989.",
                            "LEWIS, H. R.; PAPADIMITRIOU, C. H. Elementos de teoria da computação. 2.ª edição. Porto Alegre: Bookman, 2000.",
                            "MENEZES, P. F. B. Linguagens formais e autônomos. 5.ª edição. Porto Alegre: Sagra Luzzatto, 2005.",
                            "ROSEN, K. H. Matemática discreta e suas aplicações. 6.ª ed. Rio de Janeiro: McGraw Hill, 2009."
                        ]
                    }
                }
            },
            {
                "id": "redes_de_computadores",
                "tipo": "card_expansível",
                "titulo": "Redes de computadores",
                "url": "/disciplinas/redes_de_computadores",
                "resumo": "Redes de computadores é uma disciplina optativa e faz parte do núcleo específico do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "redes_de_computadores",
                    "nome": "Redes de computadores",
                    "nucleo": "NE",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "4°",
                    "Unidade": "INF",
                    "obrigatoria": "Não",
                    "prerequisito": [
                        "disciplinas_optativas"
                    ],
                    "topicos_swebok": [],
                    "ementa": [
                        "Fundamentos.",
                        "Arquitetura de Redes TCP/IP (Internet).",
                        "Camadas de Aplicação, Transporte, Rede, Enlace e Física.",
                        "Gerenciamento de Redes.",
                        "Redes Sem Fio e Mobilidade.",
                        "Estudo de Caso de Tópicos Emergentes em Redes."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "KUROSE,J.F.; ROSS, K. Redes de Computadores e a Internet, 6.ª edição. Pearson Education, 2013.",
                            "LAUDON, K. C.; LAUDON,J. P. Sistemas de Informação Gerenciais. 9.ª edição. São Paulo: Pearson Education, 2013.",
                            "TANENBAUM, A. S. Computer N etworks, 4th edition, Prentice Hall, 2003."
                        ],
                        "bibliografia_complementar": [
                            "DANTAS, M. Redes de comunicação e computadores: abordagem quantitativa. Visual Books, 2009. ISBN 9788575022559.",
                            "PETERSON, L. L.; DAVIE, B. S. Redes de Computadores: Uma Abordagem de Sistemas, 3.ª edição. Campus Elsevier, 2004.",
                            "SOARES, L. F. G; SOUZA FILHO, G. L.; COLCHER, S. Redes de computadores: das LANS, MANS e W ANS às Redes ATM. Editora Campus, 1995. ISBN 857001998X.",
                            "STALLINGS, W. Data and Computer Communications, 8th edition, Pearson/Prentice Hall, 2007.",
                            "TORRES, G. Redes de computadores: curso completo. Axcel Books, 2001."
                        ]
                    }
                }
            },
            {
                "id": "introducao_a_lingua_brasileira_de_sinais",
                "tipo": "card_expansível",
                "titulo": "Introdução à Língua Brasileira de Sinais",
                "url": "/disciplinas/introducao_a_lingua_brasileira_de_sinais",
                "resumo": "Introdução a língua brasileira de sinais é uma disciplina optativa e faz parte do núcleo específico do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "introducao_a_lingua_brasileira_de_sinais",
                    "nome": "Introdução à Língua Brasileira de Sinais",
                    "nucleo": "NE",
                    "teo": 64,
                    "pra": 0,
                    "total": 64,
                    "periodo": "4°",
                    "unidade": "LETRAS",
                    "obrigatoria": "Não",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Introdução às práticas de compreensão e produção em LIBRAS através do uso de estruturas e funções comunicativas elementares.",
                        "Concepções sobre a Língua de Sinais.",
                        "O surdo e a sociedade."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "FELIPE, T.; MONTEIRO, M. S. LIBRAS em contexto. Curso Básico. Brasília: Ministério da Educação e do Desporto/Secretaria de Educação Especial, 2001.",
                            "PEREIRA, M. C. C.; et al. LIBRAS - Conhecimento além dos sinais. São Paulo: Pearson, 2011.",
                            "PIMENTA, N.; QUADROS, R. M. Curso de LIBRAS 1 - Iniciante. 3.ª edição. Porto Alegre: Pallotti, 2008."
                        ],
                        "bibliografia_complementar": [
                            "ALMEIDA, E. C.; DUARTE, P. M. Atividades ilustradas em sinais da Libras.  São Paulo: Revinter, 2004.",
                            "BRITO, L. F. Por uma gramática de língua de sinais. Rio de Janeiro: Tempo Brasileiro, 1995.",
                            "CAPOVILLA, F. C.; RAPHAEL, W. D.; MAURÍCIO, A. C. L. Dicionário Enciclopédico Ilustrado Trilíngue da Língua de Sinais Brasileira, v 1 e 2. São Paulo: Editora da Universidade de São Paulo, 2010.",
                            "CAPOVILLA, F. C.; RAPHAEL, W. D. (ed.). Enciclopédia da Língua de Sinais Brasileira. v. 1 e 2. São Paulo: EDUSP, 2004.",
                            "GESSER, A. LIBRAS? Que língua é essa?: Crenças e preconceitos em torno da língua de sinais e da realidade surda. São Paulo: Parábola Editorial, 2009.",
                            "QUADROS, R. M.; KARNOPP, L. Língua de sinais brasileira: estudos linguísticos. ARTMED: Porto Alegre, 2004."
                        ]
                    }
                }
            },
            {
                "id": "compiladores",
                "tipo": "card_expansível",
                "titulo": "Compiladores",
                "url": "/disciplinas/compiladores",
                "resumo": "Compiladores é uma disciplina optativa e faz parte do núcleo específico do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "compiladores",
                    "nome": "Compiladores",
                    "nucleo": "NE",
                    "teo": 64,
                    "pra": 0,
                    "total": 64,
                    "periodo": "4°",
                    "unidade": "INF",
                    "obrigatoria": "Não",
                    "prerequisito": [
                        "D11, D37"
                    ],
                    "topicos_swebok": [],
                    "ementa": [
                        "A estrutura de um compilador.",
                        "Análises léxica e sintática.",
                        "Definições dirigidas por sintaxe e análise semântica.",
                        "Organização da tabela de símbolos.",
                        "Representação intermediária do programa-fonte.",
                        "Geração do código-objeto da compilação",
                        "Introdução à otimização do código-objeto",
                        "Implementação de um compilador"
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "AHO, A. V; LAM, M. S.; SETHI, R.; ULLMAN, J. D. Compiladores: Princípios, técnicas e ferramentas. 2.ª ed. Pearson-Addison-Wesley, 2008.",
                            "LOUDEN, K. C. Compiladores - Princípios e Práticas. Editora Thompson 2004.",
                            "APPEL, A. W. Modern Compiler Implementation in C - Basic Techiniques. Cambridge University Press, 1997."
                        ],
                        "bibliografia_complementar": [
                            "APPEL, A. W. Modern Compiler Implementation in Java. 2nd edition. New York: Cambridge University Press, 2002.",
                            "HOLMES,J. Modern Compiler Implementation inJava. Prentice Hall, 1995.",
                            "MUCHNICK, S. S. Advanced Compiler Design and Implementation. Morgan Kaufmann, 1997.",
                            "HANSON, D. R.; FRASER, C. W. A Retargetable C Compiler: Design and Implementation. Benjamin Cummings Pub., 1995.",
                            "LEBLANC, R. J.; FISCHER, C. N. Crafting a Compiler with C. Benjamin/Cummings, 1991."
                        ]
                    }
                }
            },
            {
                "id": "sistemas_distribuidos",
                "tipo": "card_expansível",
                "titulo": "Sistemas Distribuídos",
                "url": "/disciplinas/sistemas_distribuidos",
                "resumo": "Sistemas distribuidos é uma disciplina optativa e faz parte do núcleo específico do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "sistemas_distribuidos",
                    "nome": "Sistemas Distribuídos",
                    "nucleo": "NE",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "8°",
                    "unidade": "INF",
                    "obrigatoria": "Não",
                    "prerequisito": [
                        "programacao_orientada_a_objetos"
                    ],
                    "topicos_swebok": [],
                    "ementa": [
                        "Introdução a Sistemas Distribuídos",
                        "Invocação Remota",
                        "Obejtos Distribuídos",
                        "Arquiteturas Orientadas a Serviços e utilização de serviços Web.",
                        "Computação Móvel e Ubíqua Estudo de Casos de Tópicos Emergentes em Sistemas Distribuídos."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "ANDREWS, G. R. Foundations of multithreaded, parallel, and distributed programming. Addison-Wesley, 2000.",
                            "COULOURIS, G. F. et al. Distributed Systems: Concepts and Design, 5th edition, Addison-Wesley, 2012.",
                            "KUROSE, J. F.; ROSS, K. Redes de Computadores e a Internet, 6.ª edição. Pearson Education, 2013."
                        ],
                        "bibliografia_complementar": [
                            "BIRMAN, K. P. Reliable distributed systems: technologies, web services, and applications, N ew York: Springer, 2005. ISBN 0387215093.",
                            "CLARK, M. et al. Web services business strategies and architectures. Expert Press, 2002. ISBN 1904284132.",
                            "JOSUTTIS, N. M. SOA in practice. O'Reilly, 2007. ISBN 0596529554.",
                            "LYNCH, N. A Distributed algorithms. M. Kaufmann, 1997.",
                            "TANENBAUM, A.S.; STEEN, M. van. Distributed Systems: Principles and Paradigms. Prentice Hall, 2nd Edition, 2006."
                        ]
                    }
                }
            },
            {
                "id": "metodologia_e_experimentacao_em_engenharia_de_software",
                "tipo": "card_expansível",
                "titulo": "Metodologia e Experimentação em Engenharia de Software",
                "url": "/disciplinas/metodologia_e_experimentacao_em_engenharia_de_software",
                "resumo": "Metodologia e experimentação em engenharia de software é uma disciplina optativa e faz parte do núcleo específico do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "metodologia_e_experimentacao_em_engenharia_de_software",
                    "nome": "Metodologia e Experimentação em Engenharia de Software",
                    "nucleo": "NE",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "8°",
                    "unidade": "INF",
                    "obrigatoria": "Não",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Metodologia Científica (16h): aplicação de metodologia científica em atividades de Engenharia de Software.",
                        "Fundamentos da Engenharia de Software Experimental (16h): contexto da experimentação na Engenharia de Software; principais tipos de experimentos aplicados à Engenharia de Software; estudos primários e secundários; revisão e mapeamento sistemático da literatura.",
                        "Realização de Experimentos em Engenharia de Software (32h)."
                    ],
                    "condicoesMinimas": [
                        "(Faz com orientação). Aplicar princípios científicos da Engenharia de Software Experimental na realização de experimentos com software.",
                        "(Segue instruções). Realizar estudo secundário sistemático em Engenharia de Software."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "JURISTO, N. Basics of software engineering experimentation. Kluwer Academic Publishers, 2001. ISBN 079237990X.",
                            "WOHLIN, C. et al. Experimentation in Software Engineering. 2nd edition. Springer, 2012.",
                            "GETTINBY, G; GARDINER, W. P. Experimental design techniques in statistical practice: a practical software-based approach. Horwood Pub., 1998. ISBN 1898563357."
                        ],
                        "bibliografia_complementar": [
                            "W AZLA WICK, R. S. Metodologia de Pesquisa para Ciência da Computação. Editora Campus, 2009.",
                            "WOHLIN, C. Experimentation in software engmeenng: an introduction. Kluwer Academic, 2000. ISBN 0792386825.",
                            "PO L YAK, B. T. Introduction to optimization. Optimization Software, 1987. ISBN 0911575146.",
                            "HALL, E. M. Managing risk methods for software systems development. Addison-Wesley, 1998. ISBN 0201255928.",
                            "QUALIDADE no setor de software brasileiro. Brasilia, D.F.: MCT, 1997."
                        ]
                    }
                }
            },
            {
                "id": "mercado_e_economia_de_software",
                "tipo": "card_expansível",
                "titulo": "Mercado e Economia de Software",
                "url": "/disciplinas/mercado_e_economia_de_software",
                "resumo": "Mercado e economia de software é uma disciplina optativa e faz parte do núcleo específico do bacharelado em Engenharia de Software da UFG.",
                "conteudo": {
                    "id": "mercado_e_economia_de_software",
                    "nome": "Mercado e Economia de Software",
                    "nucleo": "NE",
                    "teo": 32,
                    "pra": 32,
                    "total": 64,
                    "periodo": "8°",
                    "unidade": "INF",
                    "obrigatoria": "Não",
                    "prerequisito": [],
                    "topicos_swebok": [],
                    "ementa": [
                        "Modelos de negócio para software (aluguel, serviço, código aberto).",
                        "Leis, normas, impostos e legislação brasileira para o mercado local e para a exportação de software.",
                        "Programas de incentivo à exportação e à produção de software.",
                        "Características e exigências do mercado interno e externo.",
                        "Identificação de oportunidades de inovação em software.",
                        "Planos de negócio de software para o mercado nacional e global.",
                        "Engenharia Econômica. Fornecimento, demanda e produção. Lucro produzido por capital (interest). Análise custo-benefício. Análise breakeven. Retorno de investimento. Avaliação de alternativas. Economia aplicada ao desenvolvimento de software."
                    ],
                    "condicoesMinimas": [
                        "(Segue instruções). Explicar a relação entre decisões técnicas e o alinhamento com objetivos de negócio no qual software está inserido.",
                        "(Segue instruções). Explicar as principais leis e normas pertinentes à indústria de software no Brasil.",
                        "(Segue instruções). Elaborar plano de negócio para software inovador."
                    ],
                    "bibliografia": {
                        "bibliografia_basica": [
                            "TOCKEY, S. Return on Software: Maximizing the Return on Your Software Investment, Addison-Wesley, 2004.",
                            "GRADY, S. O. The software paradox: the rise and fall ofthe commercial software market. O'Reilly, 2015.",
                            "SALIM, C. S. Construindo planos de negócios: todos os passos necessários para planejar e desenvolver negócios de sucesso. 3.ª edição. Rio de Janeiro: Elsevier, 2005. ISBN 8535217363."
                        ],
                        "bibliografia_complementar": [
                            "BROOKS J., F. P. O mítico homem-mês: ensaios sobre engenharia de software. Elsevier, 2009. ISBN 9788535234879.",
                            "ENGHOLM J. H. Engenharia de software na prática. São Paulo: Novatec, 2010. ISBN 9788575222171.",
                            "PIMENTEL, L. O. A proteção jurídica da propriedade intelectual de software: noções básicas e temas relacionados. IEL, 2008. ISBN 9788587683045.",
                            "ORRICO J, H. Pirataria de Software. MM Livros, 2004. ISBN 8590424219.",
                            "LINS, B. F. E. et al. O mercado de software no Brasil: problemas institucionais e fiscais Brasília (DF): Câmara dos Deputados, Coordenação de Publicações, 2007. ISBN 9788573654998."
                        ]
                    }
                }
            }
        ]
    }
]
